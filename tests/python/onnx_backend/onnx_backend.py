import onnx.backend.test
from tvm.driver.onnx.backend import TVMBackend

import unittest
import warnings

pytest_plugins = 'onnx.backend.test.report',

backend_test = onnx.backend.test.runner.Runner(TVMBackend, __name__)

unsupported_onnx_tests = [
    "test_basic_convinteger",
    "test_batchnorm_epsilon_training_mode",
    "test_batchnorm_example_training_mode",
    "test_bernoulli",
    "test_bernoulli_expanded",
    "test_bernoulli_double",
    "test_bernoulli_double_expanded",
    "test_bernoulli_seed",
    "test_bernoulli_seed_expanded",
    "test_cast_BFLOAT16_to_FLOAT",
    "test_cast_DOUBLE_to_FLOAT16",
    "test_cast_FLOAT_to_BFLOAT16",
    "test_cast_FLOAT_to_STRING",
    "test_cast_STRING_to_FLOAT",
    "test_castlike_BFLOAT16_to_FLOAT",
    "test_castlike_BFLOAT16_to_FLOAT_expanded",
    "test_castlike_DOUBLE_to_FLOAT",
    "test_castlike_DOUBLE_to_FLOAT16",
    "test_castlike_DOUBLE_to_FLOAT16_expanded",
    "test_castlike_FLOAT16_to_DOUBLE",
    "test_castlike_FLOAT16_to_FLOAT",
    "test_castlike_FLOAT_to_BFLOAT16",
    "test_castlike_FLOAT_to_BFLOAT16_expanded",
    "test_castlike_FLOAT_to_DOUBLE",
    "test_castlike_FLOAT_to_FLOAT16",
    "test_castlike_FLOAT_to_STRING",
    "test_castlike_FLOAT_to_STRING_expanded",
    "test_castlike_STRING_to_FLOAT",
    "test_castlike_STRING_to_FLOAT_expanded",
    "test_convinteger_with_padding",
    "test_convinteger_without_padding",
    "test_convtranspose_autopad_same",
    "test_convtranspose_dilations",
    "test_convtranspose_output_shape",
    "test_cumsum_1d",
    "test_cumsum_1d_exclusive",
    "test_cumsum_1d_reverse",
    "test_cumsum_1d_reverse_exclusive",
    "test_cumsum_2d_axis_0",
    "test_cumsum_2d_axis_1",
    "test_cumsum_2d_negative_axis",
    "test_det_2d",
    "test_det_nd",
    "test_dropout_default",
    "test_dropout_default_mask",
    "test_dropout_default_mask_ratio",
    "test_dropout_default_ratio",
    "test_gru_batchwise",
    "test_hardswish",
    "test_identity_sequence",
    "test_if_seq",
    "test_loop11",
    "test_loop13_seq",
    "test_lstm_batchwise",
    "test_matmulinteger",
    "test_maxpool_2d_same_lower",
    "test_maxpool_2d_same_upper",
    "test_maxpool_with_argmax_2d_precomputed_pads",
    "test_maxpool_with_argmax_2d_precomputed_strides",
    "test_maxunpool_export_with_output_shape",
    "test_mvn",
    # This test fails llvm with a lowering error:
    "test_nllloss_NCd1d2d3_none_no_weight_negative_ii_expanded",
    "test_optional_has_element",
    "test_optional_get_element",
    "test_optional_get_element_sequence",
    "test_optional_has_element_empty",
    "test_qlinearmatmul_3D",
    "test_range_float_type_positive_delta_expanded",
    "test_range_int32_type_negative_delta_expanded",
    "test_reduce_sum_default_axes_keepdims_example",
    "test_reduce_sum_default_axes_keepdims_random",
    "test_reduce_sum_do_not_keepdims_example",
    "test_reduce_sum_do_not_keepdims_random",
    "test_reduce_sum_empty_axes_input_noop_example",
    "test_reduce_sum_empty_axes_input_noop_random",
    "test_reduce_sum_keepdims_example",
    "test_reduce_sum_keepdims_random",
    "test_reduce_sum_negative_axes_keepdims_example",
    "test_reduce_sum_negative_axes_keepdims_random",
    "test_reshape_allowzero_reordered",
    "test_rnn_seq_length",
    "test_round",
    "test_sequence_insert_at_back",
    "test_sequence_insert_at_front",
    "test_shape_end_1",
    "test_shape_end_negative_1",
    "test_shape_start_1",
    "test_shape_start_1_end_2",
    "test_shape_start_1_end_negative_1",
    "test_shape_start_negative_1",
    "test_simple_rnn_batchwise",
    "test_simple_rnn_defaults",
    "test_simple_rnn_with_initial_bias",
    "test_split_variable_parts_1d",
    "test_split_variable_parts_2d",
    "test_split_variable_parts_default_axis",
    "test_split_zero_size_splits",
    "test_strnormalizer_export_monday_casesensintive_lower",
    "test_strnormalizer_export_monday_casesensintive_nochangecase",
    "test_strnormalizer_export_monday_casesensintive_upper",
    "test_strnormalizer_export_monday_empty_output",
    "test_strnormalizer_export_monday_insensintive_upper_twodim",
    "test_strnormalizer_nostopwords_nochangecase",
    "test_tfidfvectorizer_tf_batch_onlybigrams_skip0",
    "test_tfidfvectorizer_tf_batch_onlybigrams_skip5",
    "test_tfidfvectorizer_tf_batch_uniandbigrams_skip5",
    "test_tfidfvectorizer_tf_only_bigrams_skip0",
    "test_tfidfvectorizer_tf_onlybigrams_levelempty",
    "test_tfidfvectorizer_tf_onlybigrams_skip5",
    "test_tfidfvectorizer_tf_uniandbigrams_skip5",
    "test_training_dropout",
    "test_training_dropout_default",
    "test_training_dropout_default_mask",
    "test_training_dropout_mask",
    "test_training_dropout_zero_ratio",
    "test_training_dropout_zero_ratio_mask",
    "test_tril",
    "test_tril_pos",
    "test_tril_square",
    "test_tril_square_neg",
    "test_tril_neg",
    "test_tril_one_row_neg",
    "test_tril_out_neg",
    "test_tril_out_pos",
    "test_tril_zero",
    "test_triu",
    "test_triu_one_row",
    "test_triu_out_neg_out",
    "test_triu_out_pos",
    "test_triu_neg",
    "test_triu_pos",
    "test_triu_square",
    "test_triu_square_neg",
    "test_triu_zero",
    # These unsqueeze tests work, but take 2+ hrs to run
    "test_unsqueeze_three_axes",
    "test_unsqueeze_two_axes",
    "test_unsqueeze_unsorted_axes",
    "test_unique_sorted_with_axis",
    "test_unique_sorted_with_axis_3d",
    "test_unique_sorted_with_negative_axis",
    "test_upsample_nearest",
]

for test in unsupported_onnx_tests:
    backend_test.exclude(test)

globals().update(backend_test.enable_report().test_cases)

if __name__ == '__main__':
    with warnings.catch_warnings():
        unittest.main()
