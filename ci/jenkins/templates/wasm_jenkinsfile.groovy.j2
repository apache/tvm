// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
{% include "utils/base.groovy.j2" with context %}
{% import 'utils/macros.j2' as m with context -%}

{% call m.invoke_build(
  name='BUILD: WASM',
  node='CPU-SMALL',
  condition='!skip_ci && is_docs_only_build != 1',
  ws='tvm/build-wasm',
  docker_image='ci_wasm',
  platform='wasm',
) %}
  sh (
    script: "${docker_run} ${ci_wasm} ./tests/scripts/task_config_build_wasm.sh build",
    label: 'Create WASM cmake config',
  )
  cmake_build(ci_wasm, 'build', '-j2')
  make_standalone_crt(ci_wasm, 'build')
  make_cpp_tests(ci_wasm, 'build')
  cpp_unittest(ci_wasm)
  ci_setup(ci_wasm)
  sh (
    script: "${docker_run} ${ci_wasm} ./tests/scripts/task_web_wasm.sh",
    label: 'Run WASM lint and tests',
  )
{% endcall %}
