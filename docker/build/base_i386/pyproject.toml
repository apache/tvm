# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[tool.black]
line-length = 100
target-version = ['py36']
include = '(\.pyi?$)'
exclude = '''

(
  /(
      \.github
    | \.tvm
    | \.tvm_test_data
    | \.vscode
    | \.venv
    | 3rdparty
    | build\/
    | cmake\/
    | conda\/
    | docker\/
    | docs\/
    | golang\/
    | include\/
    | jvm\/
    | licenses\/
    | nnvm\/
    | rust\/
    | src\/
    | vta\/
    | web\/
  )/
)
'''

[tool.poetry]
name = "apache-tvm"
authors = []
version = "0.8.0"
description = "Open source Deep Learning compliation toolkit"
[tool.poetry.dependencies]
python = ">=3.7, <3.9"
attrs = { version = "*", optional = false }
cloudpickle = { version = "*", optional = false }
coremltools = { version = "*", optional = true }
decorator = { version = "*", optional = false }
ethos-u-vela = { version = "==3.2.0", optional = true }
future = { version = "*", optional = true }
h5py = { version = "==2.10.0", optional = true }
numpy = { version = "==1.19.3", optional = false }
onnx = { version = "^1.10.0", optional = true }
onnxoptimizer = { version = "*", optional = true }
onnxruntime = { version = "*", optional = true }
opencv-python = { version = "*", optional = true }
paddlepaddle = { version = "==2.1.3", optional = true }
progressbar = { version = "*", optional = true }
protobuf = { version = "*", optional = true }
psutil = { version = "*", optional = false }
scikit-image = { version = "*", optional = true }
scipy = { version = "*", optional = false }
six = { version = "*", optional = true }
synr = { version = "==0.6.0", optional = false }
tensorflow = { version = "^2.6", optional = true }
tensorflow-estimator = { version = "*", optional = true }
tflite = { version = "*", optional = true }
torch = { version = "*", optional = true }
torchvision = { version = "*", optional = true }
tornado = { version = "*", optional = false }
xgboost = { version = ">=1.1.0", optional = true }

[tool.poetry.dev-dependencies]
astroid = "*"
autodocsumm = "*"
black = "==20.8b1"
commonmark = ">=0.7.3"
cpplint = "*"
docutils = "<0.17"
image = "*"
matplotlib = "*"
pillow = "*"
pylint = "*"
sphinx = "==4.2.0"
sphinx_autodoc_annotation = "*"
sphinx_gallery = "*"
sphinx_rtd_theme = "*"

[tool.poetry.extras]
# Requirements for using Arm(R) Ethos(TM)-U NPU
ethosu = ["ethos-u-vela"]

# Requirements for the Caffe importer
importer-caffe = ["numpy", "protobuf", "scikit-image", "six"]

# Requirements for the Caffe2 importer
importer-caffe2 = ["future", "torch"]

# Requirements for the CoreML importer
importer-coreml = ["coremltools"]

# Requirements for the DarkNet importer
importer-darknet = ["opencv-python"]

# Requirements for the Keras importer
importer-keras = ["tensorflow", "tensorflow-estimator"]

# Requirements for the ONNX importer
importer-onnx = ["future", "onnx", "onnxoptimizer", "onnxruntime", "torch", "torchvision"]

# Requirements for the PaddlePaddle importer
importer-paddle = ["paddlepaddle"]

# Requirements for the PyTorch importer
importer-pytorch = ["future", "torch", "torchvision"]

# Requirements for the TensorFlow importer
importer-tensorflow = ["tensorflow", "tensorflow-estimator"]

# Requirements for the TFLite importer
importer-tflite = ["tensorflow", "tensorflow-estimator", "tflite"]

# Requirements for the tvmc command-line tool
tvmc = ["ethos-u-vela", "future", "onnx", "onnxoptimizer", "onnxruntime", "paddlepaddle", "tensorflow", "tflite", "torch", "torchvision", "xgboost"]

# Requirements for the Vitis AI codegen
vitis-ai = ["h5py", "progressbar"]

# Requirements for XGBoost autotuning
xgboost = ["future", "torch", "xgboost"]


