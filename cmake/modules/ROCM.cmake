# ROCM Module
if(NOT ROCM_PATH STREQUAL "")
  include_directories(${ROCM_PATH}/include)
  set(ROCM_LIB_PATH ${ROCM_PATH}/lib)
else()
  set(ROCM_LIB_PATH /lib)
endif()

if(USE_ROCM)
  message(STATUS "Build with ROCM support")
  find_library(ROCM_LIBS hip_hcc ${ROCM_LIB_PATH})
  file(GLOB RUNTIME_ROCM_SRCS src/runtime/rocm/*.cc)
  list(APPEND TVM_RUNTIME_LINKER_LIBS ${ROCM_LIBS})
  list(APPEND RUNTIME_SRCS ${RUNTIME_ROCM_SRCS})
  add_definitions(-DTVM_ROCM_RUNTIME=1 -D__HIP_PLATFORM_HCC__=1)

  if(USE_MIOPEN)
    message(STATUS "Build with MIOpen support")
    file(GLOB MIOPEN_CONTRIB_SRCS src/contrib/miopen/*.cc)
    list(APPEND RUNTIME_SRCS ${MIOPEN_CONTRIB_SRCS})
    find_library(MIOPEN_LIBS MIOpen ${ROCM_LIB_PATH})
    list(APPEND TVM_RUNTIME_LINKER_LIBS ${MIOPEN_LIBS})
  endif(USE_MIOPEN)

  if(USE_ROCBLAS)
    message(STATUS "Build with RocBLAS support")
    file(GLOB ROCBLAS_CONTRIB_SRCS src/contrib/rocblas/*.cc)
    list(APPEND RUNTIME_SRCS ${ROCBLAS_CONTRIB_SRCS})
    find_library(ROCBLAS_LIBS rocblas ${ROCM_LIB_PATH})
    list(APPEND TVM_RUNTIME_LINKER_LIBS ${ROCBLAS_LIBS})
  endif(USE_ROCBLAS)
else(USE_ROCM)
  add_definitions(-DTVM_ROCM_RUNTIME=0)
endif(USE_ROCM)
