/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

#include "remote.idl"
#include "AEEStdDef.idl"

typedef sequence<octet> buffer;

interface hexagon_proxy_rpc : remote_handle64 {
  AEEResult load(in string module_path, rout unsigned long mod);
  AEEResult unload(in unsigned long mod);
  AEEResult get_function(in string name, in unsigned long mod, rout unsigned long func);
  AEEResult release_function(in unsigned long func);
  AEEResult invoke(in unsigned long func, in buffer handles);
  AEEResult allocate(in buffer template_tensor, in string mem_scope, rout unsigned long tensor);
  AEEResult read(rout buffer dst_ptr, in unsigned long src);
  AEEResult write(in unsigned long dst, in buffer src_ptr);
  AEEResult release(in unsigned long array);
};
