# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# This `pyproject.toml` file is used to allow MicroTVM
# to run within a Poetry-managed environment.

[tool.black]
line-length = 100
target-version = ['py37']
include = '(\.pyi?$)'
exclude = '''

(
  /(
      \.github
    | \.tvm
    | \.tvm_test_data
    | \.vscode
    | \.venv
    | 3rdparty
    | build\/
    | cmake\/
    | conda\/
    | docker\/
    | docs\/
    | golang\/
    | include\/
    | jvm\/
    | licenses\/
    | nnvm\/
    | rust\/
    | src\/
    | vta\/
    | web\/
  )/
)
'''
[tool.poetry]
name = "microtvm"
version = "0.1.0"
description = ""
authors = []
packages = [
    { include = "tvm", from = "../../python" },
]

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
attrs = "==22.2.0"
decorator = "==5.1.1"
numpy = "==1.22"
psutil = "==5.9.4"
scipy = "==1.7.3"
tornado = "==6.3.3"
typed-ast = "^1.5.4"

# AutoTVM
xgboost = {version = "==1.4.2", optional = true}

#############
# Importers #
#############

# NOTE: Caffe frontend dependency is from torch package.

# CoreML
coremltools = {version = "^3.3", optional = true}

# Darknet
opencv-python = {version = "^4.2", optional = true}
cffi = {version = "^1.14", optional = true}

# Keras
keras = {version = "==2.12.0", optional = true}

# MXNet frontend
mxnet = {version = "==1.9.1", optional = true}

# ONNX frontend
onnx = {version = "==1.13.0", optional = true}
onnxoptimizer = { version = "==0.3.10", optional = true }
onnxruntime = { version = "==1.14.1", optional = true }

# Pytorch (also used by ONNX)
torch = { version = "==1.13.1", optional = true }
torchvision = { version = "==0.12.0", optional = true }

future = { version = ">=0.18.3", optional = true }

# Tensorflow frontend
tensorflow = {version = "^2.12.0", optional = true}

# TFLite frontend
tflite = {version = "^2.10.0", optional = true}
wheel = "*"
cloudpickle = "^1.6.0"
pyusb = "^1.2.1"


[tool.poetry.extras]
xgboost = ["xgboost"]
importer-caffe2 = ["torch"]
importer-coreml = ["coremltools"]
importer-darknet = ["opencv-python"]
importer-keras = ["tensorflow"]
importer-onnx = ["future", "onnx", "onnxoptimizer", "onnxruntime", "torch", "torchvision"]
importer-pytorch = ["torch", "torchvision", "future"]
importer-tensorflow = ["tensorflow"]
importer-tflite = ["tflite", "tensorflow"]
importer-mxnet = ["mxnet"]

[tool.poetry.dev-dependencies]
autodocsumm = "^0.1"
black = "^19.10b0"
matplotlib = "^3.2"
Image = "^1.5"
recommonmark = "^0.6"
pillow = "==9.2.0"
pyformat = "^0.7"
pylint = "^2.4"
pytest = "==7.2.1"
pytest-xdist = "==3.1.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.autopep8]
max_line_length = 100
