# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# This `pyproject.toml` file is used to allow MicroTVM
# to run within a Poetry-managed environment.

[tool.black]
line-length = 100
target-version = ['py37']
include = '(\.pyi?$)'
exclude = '''

(
  /(
      \.github
    | \.tvm
    | \.tvm_test_data
    | \.vscode
    | \.venv
    | 3rdparty
    | build\/
    | cmake\/
    | conda\/
    | docker\/
    | docs\/
    | golang\/
    | include\/
    | jvm\/
    | licenses\/
    | nnvm\/
    | rust\/
    | src\/
    | vta\/
    | web\/
  )/
)
'''
[tool.poetry]
name = "microtvm"
version = "0.1.0"
description = ""
authors = []
packages = [
    { include = "tvm", from = "../../python" },
]

[tool.poetry.dependencies]
python = ">=3.7, <3.9"
attrs = "^19"
decorator = "^4.4"
numpy = "~1.19"
psutil = "^5"
scipy = "^1.4"
tornado = "^6"
typed_ast = "^1.4"
pyyaml = "==6.0"
pyserial = "^3.5"

# AutoTVM
xgboost = {version = "^1.1", optional = true}

#############
# Importers #
#############

# NOTE: Caffe frontend dependency is from torch package.

# CoreML
coremltools = {version = "^3.3", optional = true}

# Darknet
opencv-python = {version = "^4.2", optional = true}
cffi = {version = "^1.14", optional = true}

# NOTE: Keras provided by tensorflow package.
# If TF version conflict, maybe try: keras = "2.3.1"

# MXNet frontend
mxnet = {version = "==1.6.0", optional = true}

# ONNX frontend
onnx = {version = "==1.10.2", optional = true}
onnxoptimizer = { version = "==0.2.6", optional = true }
onnxruntime = { version = "==1.9.0", optional = true }

# Pytorch (also used by ONNX)
torch = { version = "==1.11.0", optional = true }
torchvision = { version = "==0.12.0", optional = true }

future = { version = "==*", optional = true }

# Tensorflow frontend
tensorflow = {version = "^2.1", optional = true}
tensorflow-estimator = {version = "^2.1", optional = true}

# TFLite frontend
tflite = {version = "2.1.0", optional = true}
wheel = "*"
cloudpickle = "^1.6.0"
pyusb = "^1.2.1"


[tool.poetry.extras]
xgboost = ["xgboost"]
importer-caffe2 = ["torch"]
importer-coreml = ["coremltools"]
importer-darknet = ["opencv-python"]
importer-keras = ["tensorflow", "tensorflow-estimator"]
importer-onnx = ["future", "onnx", "onnxoptimizer", "onnxruntime", "torch", "torchvision"]
importer-pytorch = ["torch", "torchvision", "future"]
importer-tensorflow = ["tensorflow", "tensorflow-estimator"]
importer-tflite = ["tflite", "tensorflow", "tensorflow-estimator"]
importer-mxnet = ["mxnet"]

[tool.poetry.dev-dependencies]
autodocsumm = "^0.1"
black = "^19.10b0"
sphinx = "^3.0"
sphinx-gallery = { git = "https://github.com/sphinx-gallery/sphinx-gallery.git", rev = "6142f179" }
sphinx-rtd-theme = "^0.4"
matplotlib = "^3.2"
Image = "^1.5"
recommonmark = "^0.6"
pillow = "< 7"
pyformat = "^0.7"
pylint = "^2.4"
pytest = "==7.1.2"
pytest-xdist = "==2.5.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.autopep8]
max_line_length = 100
