
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Makefile for the STM32 H747 Disco project.

######################################
# target
######################################

TARGET = Project

# 115200
# BAUDRATE = 921600

STM32_PROG ?= ${X_CUBE_TOOL_PATH}/STM32_Programmer_CLI

######################################
# building variables
######################################

# debug build?
DEBUG ?= 0
# optimization
OPT ?= -O3

#######################################
# paths
#######################################

SELF_DIR := $(dir $(lastword $(MAKEFILE_LIST)))

HAL_PATH = $(X_CUBE_PATH)/Drivers/STM32H7xx_HAL_Driver
BSP_PATH = $(X_CUBE_PATH)/Drivers/BSP
CMSIS_PATH = $(X_CUBE_PATH)/Drivers/CMSIS

# Build path
ifeq ($(VALID), 1)
BUILD_DIR = build-valid
else
BUILD_DIR = build-perf
endif

######################################
# source
######################################

#
# Model sources
#
MODEL_PATH_NO_SLASH = $(realpath -s ${MODEL_PATH})
C_SOURCES := $(wildcard ${MODEL_PATH_NO_SLASH}/*.c)

#
# TVM sources
#
C_SOURCES += $(TVM_PATH)/src/runtime/stm32/runtime.c
C_SOURCES += $(TVM_PATH)/src/runtime/stm32/ai_runtime_api.c

#
# Application C sources
#
C_SOURCES += Src/main.c

C_SOURCES += $(SELF_DIR)/Src/app_x-cube-ai.c
C_SOURCES += $(SELF_DIR)/Src/stm32h7xx_it.c
C_SOURCES += $(SELF_DIR)/Src/stm32h7xx_hal_msp.c
C_SOURCES += $(SELF_DIR)/Src/system_stm32h7xx.c

C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_cortex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_crc_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_crc.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_dma_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_dma.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_exti.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_flash_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_flash.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_gpio.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_hsem.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_i2c_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_i2c.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_mdma.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_pwr_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_pwr.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_qspi.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_rcc_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_rcc.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_sdram.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_tim_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_tim.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_uart_ex.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal_uart.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_hal.c
C_SOURCES += $(HAL_PATH)/Src/stm32h7xx_ll_fmc.c

C_SOURCES += $(BSP_PATH)/Components/is42s32800j/is42s32800j.c
C_SOURCES += $(BSP_PATH)/Components/mfxstm32l152/mfxstm32l152.c
C_SOURCES += $(BSP_PATH)/Components/mfxstm32l152/mfxstm32l152_reg.c
C_SOURCES += $(BSP_PATH)/Components/mt25tl01g/mt25tl01g.c
C_SOURCES += $(BSP_PATH)/STM32H747I-DISCO/stm32h747i_discovery.c
C_SOURCES += $(BSP_PATH)/STM32H747I-DISCO/stm32h747i_discovery_sdram.c
C_SOURCES += $(BSP_PATH)/STM32H747I-DISCO/stm32h747i_discovery_qspi.c

C_SOURCES += $(SELF_DIR)/Src/Misc/aiTestTvmHelper.c
C_SOURCES += $(SELF_DIR)/Src/Misc/aiTestUtility.c

ifeq ($(VALID), 1)
C_SOURCES += $(SELF_DIR)/Src/Validation/aiPbIO.c
C_SOURCES += $(SELF_DIR)/Src/Validation/aiPbMgr.c
C_SOURCES += $(SELF_DIR)/Src/Validation/aiValidation.c
C_SOURCES += $(SELF_DIR)/Src/Validation/pb_common.c
C_SOURCES += $(SELF_DIR)/Src/Validation/pb_decode.c
C_SOURCES += $(SELF_DIR)/Src/Validation/pb_encode.c
C_SOURCES += $(SELF_DIR)/Src/Validation/stm32msg.pb.c
else
C_SOURCES += $(SELF_DIR)/Src/SystemPerformance/aiSystemPerformance.c
endif

#
# ASM sources
#
ASM_SOURCES = $(SELF_DIR)/Asm/startup_stm32h747xx.s


STM32_PROG += --extload "${X_CUBE_TOOL_PATH}/ExternalLoader/MT25TL01G_STM32H747I-DISCO.stldr"

#######################################
# binaries
#######################################

PREFIX = arm-none-eabi-
CC = ${ARM_PATH}/$(PREFIX)gcc
AS = ${ARM_PATH}/$(PREFIX)gcc -x assembler-with-cpp
CP = ${ARM_PATH}/$(PREFIX)objcopy
SZ = ${ARM_PATH}/$(PREFIX)size
OBJDUMP = ${ARM_PATH}/$(PREFIX)objdump

HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################

# cpu
CPU = -mcpu=cortex-m7

# fpu
FPU = -mfpu=fpv5-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS =

# C defines
C_DEFS += -DUSE_HAL_DRIVER
C_DEFS += -DCORE_CM7
C_DEFS += -D__FPU_PRESENT=1
C_DEFS += -DARM_MATH_CM7

C_DEFS += -DUSE_QSPI_CLK_90MHZ=0
# C_DEFS += -DUSE_VOS0_480MHZ_OVERCLOCK=1
C_DEFS += -DUSE_WEIGHTS_IN_SDRAM=0
C_DEFS += -DSTM32H747xx
C_DEFS += -DUSE_STM32H747I_DISCO

ifeq ($(VALID), 1)
C_DEFS += -DNO_X_CUBE_AI_RUNTIME=1
endif

ifneq ($(strip $(BAUDRATE)),)
C_DEFS += -DBAUDRATE=${BAUDRATE}
endif

ifeq ($(VALID), 1)
C_DEFS += -DUSE_VALID
endif

ifeq ($(DEBUG), 1)
C_DEFS += -D_VERBOSE_=1
endif

# AS includes
AS_INCLUDES =

#
# Includes
#

C_INCLUDES += -I$(TVM_PATH)/include \
	      -I$(TVM_PATH)/3rdparty/dlpack/include \
	      -I$(TVM_PATH)/include/tvm/runtime \
	      -I$(TVM_PATH)/src/runtime/stm32

C_INCLUDES += -I$(MODEL_PATH)

# C includes

C_INCLUDES += -I$(SELF_DIR)/Inc
C_INCLUDES += -I$(CMSIS_PATH)/Include
C_INCLUDES += -I$(CMSIS_PATH)/Device/ST/STM32H7xx/Include
# C_INCLUDES += -I$(CMSIS_PATH)/DSP/Include
C_INCLUDES += -I$(HAL_PATH)/Inc
C_INCLUDES += -I$(HAL_PATH)/Inc/Legacy
C_INCLUDES += -I$(SELF_DIR)/Inc/Misc

ifeq ($(VALID), 1)
C_INCLUDES += -I$(SELF_DIR)/Inc/Validation
else
C_INCLUDES += -I$(SELF_DIR)/Inc/SystemPerformance
endif

C_INCLUDES += -I$(BSP_PATH)/STM32H747I-DISCO
C_INCLUDES += -I$(BSP_PATH)/Components/mt25tl01g


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

# disable certain flags for DSP lib
CFLAGS += -fno-strict-aliasing

ifeq ($(DEBUG), 1)
CFLAGS += -g3 -gdwarf-2
endif

CFLAGS += -DTLM_COUNTERS

# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
ifeq ($(CONFIG),4)
LDSCRIPT = $(SELF_DIR)/STM32H747XIHx_CM7_config4.ld
else ifeq ($(CONFIG),3)
LDSCRIPT = $(SELF_DIR)/STM32H747XIHx_CM7_config3.ld
else ifeq ($(CONFIG),2)
LDSCRIPT = $(SELF_DIR)/STM32H747XIHx_CM7_config2.ld
else ifeq ($(CONFIG),1)
LDSCRIPT = $(SELF_DIR)/STM32H747XIHx_CM7_config1.ld
else
LDSCRIPT = $(SELF_DIR)/STM32H747XIHx_CM7_config1.ld
endif

# libraries
LIBS = -lc -lm -lnosys
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections
LDFLAGS += -u _printf_float
LDFLAGS += -Wl,--wrap=malloc -Wl,--wrap=free
LDFLAGS += -Wl,--print-memory-usage


# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf

#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c | $(BUILD_DIR)
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) $(LDSCRIPT) #$(X_CUBE_AI_DEP_LIB)
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR):
	mkdir -p $@

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

clean_nn:
	-rm $(BUILD_DIR)/network.*	
	-rm $(BUILD_DIR)/network_data.*
	-rm $(BUILD_DIR)/network_lib.*

#######################################
# flash
#######################################

flash: #$(BUILD_DIR)/$(TARGET).elf 
	${STM32_PROG} -c port=swd mode=UR reset=HWrst -d $(BUILD_DIR)/$(TARGET).elf -s

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***