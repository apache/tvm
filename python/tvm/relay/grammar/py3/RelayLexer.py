# Generated from /Users/doobs/Code/repo/sampl/tvm/python/tvm/relay/grammar/Relay.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61")
        buf.write("\u0158\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\7\36\u00ce")
        buf.write("\n\36\f\36\16\36\u00d1\13\36\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\37\6\37\u00d9\n\37\r\37\16\37\u00da\3\37\3\37\3 \3")
        buf.write(" \3 \3 \7 \u00e3\n \f \16 \u00e6\13 \3 \3 \3 \3 \3!\3")
        buf.write("!\3!\3\"\3\"\3\"\7\"\u00f2\n\"\f\"\16\"\u00f5\13\"\3\"")
        buf.write("\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3")
        buf.write("*\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5")
        buf.write("-\u011a\n-\3.\3.\5.\u011e\n.\3.\3.\3.\7.\u0123\n.\f.\16")
        buf.write(".\u0126\13.\3.\3.\7.\u012a\n.\f.\16.\u012d\13.\3/\3/\3")
        buf.write("/\5/\u0132\n/\3/\5/\u0135\n/\3\60\3\60\3\60\3\61\6\61")
        buf.write("\u013b\n\61\r\61\16\61\u013c\3\62\3\62\5\62\u0141\n\62")
        buf.write("\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\65\3\65\3\65")
        buf.write("\3\65\3\65\3\65\3\65\3\65\3\65\7\65\u0154\n\65\f\65\16")
        buf.write("\65\u0157\13\65\5\u00cf\u00e4\u00f3\2\66\3\3\5\4\7\5\t")
        buf.write("\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\2C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]")
        buf.write("\2_/a\60c\2e\2g\2i\61\3\2\b\5\2\13\f\17\17\"\"\4\2\f\f")
        buf.write("\17\17\4\2GGgg\4\2--//\4\2C\\c|\3\2\62;\2\u0163\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2C\3")
        buf.write("\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M")
        buf.write("\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2")
        buf.write("W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2")
        buf.write("\2i\3\2\2\2\3k\3\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tq\3\2\2")
        buf.write("\2\13s\3\2\2\2\ru\3\2\2\2\17w\3\2\2\2\21y\3\2\2\2\23{")
        buf.write("\3\2\2\2\25}\3\2\2\2\27\u0080\3\2\2\2\31\u0085\3\2\2\2")
        buf.write("\33\u0087\3\2\2\2\35\u0089\3\2\2\2\37\u008d\3\2\2\2!\u008f")
        buf.write("\3\2\2\2#\u0091\3\2\2\2%\u0094\3\2\2\2\'\u0097\3\2\2\2")
        buf.write(")\u009a\3\2\2\2+\u009e\3\2\2\2-\u00a3\3\2\2\2/\u00a6\3")
        buf.write("\2\2\2\61\u00ac\3\2\2\2\63\u00b3\3\2\2\2\65\u00b5\3\2")
        buf.write("\2\2\67\u00bc\3\2\2\29\u00c1\3\2\2\2;\u00c8\3\2\2\2=\u00d8")
        buf.write("\3\2\2\2?\u00de\3\2\2\2A\u00eb\3\2\2\2C\u00ee\3\2\2\2")
        buf.write("E\u00f8\3\2\2\2G\u00fa\3\2\2\2I\u00fc\3\2\2\2K\u00fe\3")
        buf.write("\2\2\2M\u0100\3\2\2\2O\u0102\3\2\2\2Q\u0104\3\2\2\2S\u0107")
        buf.write("\3\2\2\2U\u010a\3\2\2\2W\u010d\3\2\2\2Y\u0119\3\2\2\2")
        buf.write("[\u011d\3\2\2\2]\u012e\3\2\2\2_\u0136\3\2\2\2a\u013a\3")
        buf.write("\2\2\2c\u013e\3\2\2\2e\u0144\3\2\2\2g\u0146\3\2\2\2i\u0148")
        buf.write("\3\2\2\2kl\7\60\2\2l\4\3\2\2\2mn\7B\2\2n\6\3\2\2\2op\7")
        buf.write("\'\2\2p\b\3\2\2\2qr\7a\2\2r\n\3\2\2\2st\7.\2\2t\f\3\2")
        buf.write("\2\2uv\7*\2\2v\16\3\2\2\2wx\7+\2\2x\20\3\2\2\2yz\7]\2")
        buf.write("\2z\22\3\2\2\2{|\7_\2\2|\24\3\2\2\2}~\7k\2\2~\177\7h\2")
        buf.write("\2\177\26\3\2\2\2\u0080\u0081\7g\2\2\u0081\u0082\7n\2")
        buf.write("\2\u0082\u0083\7u\2\2\u0083\u0084\7g\2\2\u0084\30\3\2")
        buf.write("\2\2\u0085\u0086\7}\2\2\u0086\32\3\2\2\2\u0087\u0088\7")
        buf.write("\177\2\2\u0088\34\3\2\2\2\u0089\u008a\7n\2\2\u008a\u008b")
        buf.write("\7g\2\2\u008b\u008c\7v\2\2\u008c\36\3\2\2\2\u008d\u008e")
        buf.write("\7?\2\2\u008e \3\2\2\2\u008f\u0090\7=\2\2\u0090\"\3\2")
        buf.write("\2\2\u0091\u0092\7=\2\2\u0092\u0093\7=\2\2\u0093$\3\2")
        buf.write("\2\2\u0094\u0095\7h\2\2\u0095\u0096\7p\2\2\u0096&\3\2")
        buf.write("\2\2\u0097\u0098\7/\2\2\u0098\u0099\7@\2\2\u0099(\3\2")
        buf.write("\2\2\u009a\u009b\7f\2\2\u009b\u009c\7g\2\2\u009c\u009d")
        buf.write("\7h\2\2\u009d*\3\2\2\2\u009e\u009f\7v\2\2\u009f\u00a0")
        buf.write("\7{\2\2\u00a0\u00a1\7r\2\2\u00a1\u00a2\7g\2\2\u00a2,\3")
        buf.write("\2\2\2\u00a3\u00a4\7?\2\2\u00a4\u00a5\7@\2\2\u00a5.\3")
        buf.write("\2\2\2\u00a6\u00a7\7o\2\2\u00a7\u00a8\7c\2\2\u00a8\u00a9")
        buf.write("\7v\2\2\u00a9\u00aa\7e\2\2\u00aa\u00ab\7j\2\2\u00ab\60")
        buf.write("\3\2\2\2\u00ac\u00ad\7o\2\2\u00ad\u00ae\7c\2\2\u00ae\u00af")
        buf.write("\7v\2\2\u00af\u00b0\7e\2\2\u00b0\u00b1\7j\2\2\u00b1\u00b2")
        buf.write("\7A\2\2\u00b2\62\3\2\2\2\u00b3\u00b4\7<\2\2\u00b4\64\3")
        buf.write("\2\2\2\u00b5\u00b6\7V\2\2\u00b6\u00b7\7g\2\2\u00b7\u00b8")
        buf.write("\7p\2\2\u00b8\u00b9\7u\2\2\u00b9\u00ba\7q\2\2\u00ba\u00bb")
        buf.write("\7t\2\2\u00bb\66\3\2\2\2\u00bc\u00bd\7o\2\2\u00bd\u00be")
        buf.write("\7g\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7c\2\2\u00c08\3")
        buf.write("\2\2\2\u00c1\u00c2\7x\2\2\u00c2\u00c3\7\62\2\2\u00c3\u00c4")
        buf.write("\7\60\2\2\u00c4\u00c5\7\62\2\2\u00c5\u00c6\7\60\2\2\u00c6")
        buf.write("\u00c7\7\66\2\2\u00c7:\3\2\2\2\u00c8\u00c9\7\61\2\2\u00c9")
        buf.write("\u00ca\7,\2\2\u00ca\u00cf\3\2\2\2\u00cb\u00ce\5;\36\2")
        buf.write("\u00cc\u00ce\13\2\2\2\u00cd\u00cb\3\2\2\2\u00cd\u00cc")
        buf.write("\3\2\2\2\u00ce\u00d1\3\2\2\2\u00cf\u00d0\3\2\2\2\u00cf")
        buf.write("\u00cd\3\2\2\2\u00d0\u00d2\3\2\2\2\u00d1\u00cf\3\2\2\2")
        buf.write("\u00d2\u00d3\7,\2\2\u00d3\u00d4\7\61\2\2\u00d4\u00d5\3")
        buf.write("\2\2\2\u00d5\u00d6\b\36\2\2\u00d6<\3\2\2\2\u00d7\u00d9")
        buf.write("\t\2\2\2\u00d8\u00d7\3\2\2\2\u00d9\u00da\3\2\2\2\u00da")
        buf.write("\u00d8\3\2\2\2\u00da\u00db\3\2\2\2\u00db\u00dc\3\2\2\2")
        buf.write("\u00dc\u00dd\b\37\2\2\u00dd>\3\2\2\2\u00de\u00df\7\61")
        buf.write("\2\2\u00df\u00e0\7\61\2\2\u00e0\u00e4\3\2\2\2\u00e1\u00e3")
        buf.write("\13\2\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e6\3\2\2\2\u00e4")
        buf.write("\u00e5\3\2\2\2\u00e4\u00e2\3\2\2\2\u00e5\u00e7\3\2\2\2")
        buf.write("\u00e6\u00e4\3\2\2\2\u00e7\u00e8\7\f\2\2\u00e8\u00e9\3")
        buf.write("\2\2\2\u00e9\u00ea\b \2\2\u00ea@\3\2\2\2\u00eb\u00ec\7")
        buf.write("^\2\2\u00ec\u00ed\7$\2\2\u00edB\3\2\2\2\u00ee\u00f3\7")
        buf.write("$\2\2\u00ef\u00f2\5A!\2\u00f0\u00f2\n\3\2\2\u00f1\u00ef")
        buf.write("\3\2\2\2\u00f1\u00f0\3\2\2\2\u00f2\u00f5\3\2\2\2\u00f3")
        buf.write("\u00f4\3\2\2\2\u00f3\u00f1\3\2\2\2\u00f4\u00f6\3\2\2\2")
        buf.write("\u00f5\u00f3\3\2\2\2\u00f6\u00f7\7$\2\2\u00f7D\3\2\2\2")
        buf.write("\u00f8\u00f9\7,\2\2\u00f9F\3\2\2\2\u00fa\u00fb\7\61\2")
        buf.write("\2\u00fbH\3\2\2\2\u00fc\u00fd\7-\2\2\u00fdJ\3\2\2\2\u00fe")
        buf.write("\u00ff\7/\2\2\u00ffL\3\2\2\2\u0100\u0101\7>\2\2\u0101")
        buf.write("N\3\2\2\2\u0102\u0103\7@\2\2\u0103P\3\2\2\2\u0104\u0105")
        buf.write("\7>\2\2\u0105\u0106\7?\2\2\u0106R\3\2\2\2\u0107\u0108")
        buf.write("\7@\2\2\u0108\u0109\7?\2\2\u0109T\3\2\2\2\u010a\u010b")
        buf.write("\7?\2\2\u010b\u010c\7?\2\2\u010cV\3\2\2\2\u010d\u010e")
        buf.write("\7#\2\2\u010e\u010f\7?\2\2\u010fX\3\2\2\2\u0110\u0111")
        buf.write("\7V\2\2\u0111\u0112\7t\2\2\u0112\u0113\7w\2\2\u0113\u011a")
        buf.write("\7g\2\2\u0114\u0115\7H\2\2\u0115\u0116\7c\2\2\u0116\u0117")
        buf.write("\7n\2\2\u0117\u0118\7u\2\2\u0118\u011a\7g\2\2\u0119\u0110")
        buf.write("\3\2\2\2\u0119\u0114\3\2\2\2\u011aZ\3\2\2\2\u011b\u011e")
        buf.write("\7a\2\2\u011c\u011e\5e\63\2\u011d\u011b\3\2\2\2\u011d")
        buf.write("\u011c\3\2\2\2\u011e\u0124\3\2\2\2\u011f\u0123\7a\2\2")
        buf.write("\u0120\u0123\5e\63\2\u0121\u0123\5g\64\2\u0122\u011f\3")
        buf.write("\2\2\2\u0122\u0120\3\2\2\2\u0122\u0121\3\2\2\2\u0123\u0126")
        buf.write("\3\2\2\2\u0124\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125")
        buf.write("\u012b\3\2\2\2\u0126\u0124\3\2\2\2\u0127\u0128\7\60\2")
        buf.write("\2\u0128\u012a\5[.\2\u0129\u0127\3\2\2\2\u012a\u012d\3")
        buf.write("\2\2\2\u012b\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c\\")
        buf.write("\3\2\2\2\u012d\u012b\3\2\2\2\u012e\u0131\5a\61\2\u012f")
        buf.write("\u0130\7\60\2\2\u0130\u0132\5a\61\2\u0131\u012f\3\2\2")
        buf.write("\2\u0131\u0132\3\2\2\2\u0132\u0134\3\2\2\2\u0133\u0135")
        buf.write("\5c\62\2\u0134\u0133\3\2\2\2\u0134\u0135\3\2\2\2\u0135")
        buf.write("^\3\2\2\2\u0136\u0137\5]/\2\u0137\u0138\7h\2\2\u0138`")
        buf.write("\3\2\2\2\u0139\u013b\5g\64\2\u013a\u0139\3\2\2\2\u013b")
        buf.write("\u013c\3\2\2\2\u013c\u013a\3\2\2\2\u013c\u013d\3\2\2\2")
        buf.write("\u013db\3\2\2\2\u013e\u0140\t\4\2\2\u013f\u0141\t\5\2")
        buf.write("\2\u0140\u013f\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0142")
        buf.write("\3\2\2\2\u0142\u0143\5a\61\2\u0143d\3\2\2\2\u0144\u0145")
        buf.write("\t\6\2\2\u0145f\3\2\2\2\u0146\u0147\t\7\2\2\u0147h\3\2")
        buf.write("\2\2\u0148\u0149\7O\2\2\u0149\u014a\7G\2\2\u014a\u014b")
        buf.write("\7V\2\2\u014b\u014c\7C\2\2\u014c\u014d\7F\2\2\u014d\u014e")
        buf.write("\7C\2\2\u014e\u014f\7V\2\2\u014f\u0150\7C\2\2\u0150\u0151")
        buf.write("\7<\2\2\u0151\u0155\3\2\2\2\u0152\u0154\13\2\2\2\u0153")
        buf.write("\u0152\3\2\2\2\u0154\u0157\3\2\2\2\u0155\u0153\3\2\2\2")
        buf.write("\u0155\u0156\3\2\2\2\u0156j\3\2\2\2\u0157\u0155\3\2\2")
        buf.write("\2\23\2\u00cd\u00cf\u00da\u00e4\u00f1\u00f3\u0119\u011d")
        buf.write("\u0122\u0124\u012b\u0131\u0134\u013c\u0140\u0155\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class RelayLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    SEMVER = 28
    COMMENT = 29
    WS = 30
    LINE_COMMENT = 31
    QUOTED_STRING = 32
    MUL = 33
    DIV = 34
    ADD = 35
    SUB = 36
    LT = 37
    GT = 38
    LE = 39
    GE = 40
    EQ = 41
    NE = 42
    BOOL_LIT = 43
    CNAME = 44
    FLOAT = 45
    NAT = 46
    METADATA = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "'@'", "'%'", "'_'", "','", "'('", "')'", "'['", "']'", 
            "'if'", "'else'", "'{'", "'}'", "'let'", "'='", "';'", "';;'", 
            "'fn'", "'->'", "'def'", "'type'", "'=>'", "'match'", "'match?'", 
            "':'", "'Tensor'", "'meta'", "'v0.0.4'", "'*'", "'/'", "'+'", 
            "'-'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='" ]

    symbolicNames = [ "<INVALID>",
            "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "QUOTED_STRING", 
            "MUL", "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", 
            "BOOL_LIT", "CNAME", "FLOAT", "NAT", "METADATA" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "ESCAPED_QUOTE", 
                  "QUOTED_STRING", "MUL", "DIV", "ADD", "SUB", "LT", "GT", 
                  "LE", "GE", "EQ", "NE", "BOOL_LIT", "CNAME", "PREFLOAT", 
                  "FLOAT", "NAT", "EXP", "LETTER", "DIGIT", "METADATA" ]

    grammarFileName = "Relay.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


