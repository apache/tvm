# Generated from /Users/doobs/Code/repo/sampl/tvm/python/tvm/relay/grammar/Relay.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61")
        buf.write("\u0153\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3")
        buf.write("\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3")
        buf.write("\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17")
        buf.write("\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\7\35\u00c3")
        buf.write("\n\35\f\35\16\35\u00c6\13\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\6\36\u00ce\n\36\r\36\16\36\u00cf\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3\37\7\37\u00d8\n\37\f\37\16\37\u00db\13\37")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\7!\u00e7\n!\f!")
        buf.write("\16!\u00ea\13!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3")
        buf.write("\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3")
        buf.write(",\3,\3,\3,\3,\3,\5,\u010f\n,\3-\3-\5-\u0113\n-\3-\3-\3")
        buf.write("-\7-\u0118\n-\f-\16-\u011b\13-\3-\3-\7-\u011f\n-\f-\16")
        buf.write("-\u0122\13-\3.\3.\3.\3.\3.\3.\3/\3/\3/\5/\u012d\n/\3/")
        buf.write("\5/\u0130\n/\3\60\3\60\3\60\3\61\6\61\u0136\n\61\r\61")
        buf.write("\16\61\u0137\3\62\3\62\5\62\u013c\n\62\3\62\3\62\3\63")
        buf.write("\3\63\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\65\3\65\3\65")
        buf.write("\3\65\3\65\3\65\7\65\u014f\n\65\f\65\16\65\u0152\13\65")
        buf.write("\5\u00c4\u00d9\u00e8\2\66\3\3\5\4\7\5\t\6\13\7\r\b\17")
        buf.write("\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?\2A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]\2_/a\60c\2e\2")
        buf.write("g\2i\61\3\2\b\5\2\13\f\17\17\"\"\4\2\f\f\17\17\4\2GGg")
        buf.write("g\4\2--//\4\2C\\c|\3\2\62;\2\u015e\2\3\3\2\2\2\2\5\3\2")
        buf.write("\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2")
        buf.write("\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2")
        buf.write("\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37")
        buf.write("\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2")
        buf.write("\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2")
        buf.write("\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2")
        buf.write("\2;\3\2\2\2\2=\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2")
        buf.write("\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2")
        buf.write("\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3")
        buf.write("\2\2\2\2[\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2i\3\2\2\2\3k")
        buf.write("\3\2\2\2\5m\3\2\2\2\7o\3\2\2\2\tq\3\2\2\2\13t\3\2\2\2")
        buf.write("\rv\3\2\2\2\17x\3\2\2\2\21z\3\2\2\2\23|\3\2\2\2\25~\3")
        buf.write("\2\2\2\27\u0080\3\2\2\2\31\u0082\3\2\2\2\33\u0085\3\2")
        buf.write("\2\2\35\u008a\3\2\2\2\37\u008e\3\2\2\2!\u0090\3\2\2\2")
        buf.write("#\u0092\3\2\2\2%\u0095\3\2\2\2\'\u0098\3\2\2\2)\u009b")
        buf.write("\3\2\2\2+\u009f\3\2\2\2-\u00a4\3\2\2\2/\u00a6\3\2\2\2")
        buf.write("\61\u00a8\3\2\2\2\63\u00af\3\2\2\2\65\u00b1\3\2\2\2\67")
        buf.write("\u00b6\3\2\2\29\u00bd\3\2\2\2;\u00cd\3\2\2\2=\u00d3\3")
        buf.write("\2\2\2?\u00e0\3\2\2\2A\u00e3\3\2\2\2C\u00ed\3\2\2\2E\u00ef")
        buf.write("\3\2\2\2G\u00f1\3\2\2\2I\u00f3\3\2\2\2K\u00f5\3\2\2\2")
        buf.write("M\u00f7\3\2\2\2O\u00f9\3\2\2\2Q\u00fc\3\2\2\2S\u00ff\3")
        buf.write("\2\2\2U\u0102\3\2\2\2W\u010e\3\2\2\2Y\u0112\3\2\2\2[\u0123")
        buf.write("\3\2\2\2]\u0129\3\2\2\2_\u0131\3\2\2\2a\u0135\3\2\2\2")
        buf.write("c\u0139\3\2\2\2e\u013f\3\2\2\2g\u0141\3\2\2\2i\u0143\3")
        buf.write("\2\2\2kl\7B\2\2l\4\3\2\2\2mn\7\'\2\2n\6\3\2\2\2op\7]\2")
        buf.write("\2p\b\3\2\2\2qr\7.\2\2rs\7\"\2\2s\n\3\2\2\2tu\7_\2\2u")
        buf.write("\f\3\2\2\2vw\7.\2\2w\16\3\2\2\2xy\7*\2\2y\20\3\2\2\2z")
        buf.write("{\7+\2\2{\22\3\2\2\2|}\7}\2\2}\24\3\2\2\2~\177\7\177\2")
        buf.write("\2\177\26\3\2\2\2\u0080\u0081\7\60\2\2\u0081\30\3\2\2")
        buf.write("\2\u0082\u0083\7k\2\2\u0083\u0084\7h\2\2\u0084\32\3\2")
        buf.write("\2\2\u0085\u0086\7g\2\2\u0086\u0087\7n\2\2\u0087\u0088")
        buf.write("\7u\2\2\u0088\u0089\7g\2\2\u0089\34\3\2\2\2\u008a\u008b")
        buf.write("\7n\2\2\u008b\u008c\7g\2\2\u008c\u008d\7v\2\2\u008d\36")
        buf.write("\3\2\2\2\u008e\u008f\7?\2\2\u008f \3\2\2\2\u0090\u0091")
        buf.write("\7=\2\2\u0091\"\3\2\2\2\u0092\u0093\7=\2\2\u0093\u0094")
        buf.write("\7=\2\2\u0094$\3\2\2\2\u0095\u0096\7h\2\2\u0096\u0097")
        buf.write("\7p\2\2\u0097&\3\2\2\2\u0098\u0099\7/\2\2\u0099\u009a")
        buf.write("\7@\2\2\u009a(\3\2\2\2\u009b\u009c\7f\2\2\u009c\u009d")
        buf.write("\7g\2\2\u009d\u009e\7h\2\2\u009e*\3\2\2\2\u009f\u00a0")
        buf.write("\7v\2\2\u00a0\u00a1\7{\2\2\u00a1\u00a2\7r\2\2\u00a2\u00a3")
        buf.write("\7g\2\2\u00a3,\3\2\2\2\u00a4\u00a5\7~\2\2\u00a5.\3\2\2")
        buf.write("\2\u00a6\u00a7\7<\2\2\u00a7\60\3\2\2\2\u00a8\u00a9\7V")
        buf.write("\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7p\2\2\u00ab\u00ac")
        buf.write("\7u\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae\7t\2\2\u00ae\62")
        buf.write("\3\2\2\2\u00af\u00b0\7a\2\2\u00b0\64\3\2\2\2\u00b1\u00b2")
        buf.write("\7o\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5")
        buf.write("\7c\2\2\u00b5\66\3\2\2\2\u00b6\u00b7\7x\2\2\u00b7\u00b8")
        buf.write("\7\62\2\2\u00b8\u00b9\7\60\2\2\u00b9\u00ba\7\62\2\2\u00ba")
        buf.write("\u00bb\7\60\2\2\u00bb\u00bc\7\65\2\2\u00bc8\3\2\2\2\u00bd")
        buf.write("\u00be\7\61\2\2\u00be\u00bf\7,\2\2\u00bf\u00c4\3\2\2\2")
        buf.write("\u00c0\u00c3\59\35\2\u00c1\u00c3\13\2\2\2\u00c2\u00c0")
        buf.write("\3\2\2\2\u00c2\u00c1\3\2\2\2\u00c3\u00c6\3\2\2\2\u00c4")
        buf.write("\u00c5\3\2\2\2\u00c4\u00c2\3\2\2\2\u00c5\u00c7\3\2\2\2")
        buf.write("\u00c6\u00c4\3\2\2\2\u00c7\u00c8\7,\2\2\u00c8\u00c9\7")
        buf.write("\61\2\2\u00c9\u00ca\3\2\2\2\u00ca\u00cb\b\35\2\2\u00cb")
        buf.write(":\3\2\2\2\u00cc\u00ce\t\2\2\2\u00cd\u00cc\3\2\2\2\u00ce")
        buf.write("\u00cf\3\2\2\2\u00cf\u00cd\3\2\2\2\u00cf\u00d0\3\2\2\2")
        buf.write("\u00d0\u00d1\3\2\2\2\u00d1\u00d2\b\36\2\2\u00d2<\3\2\2")
        buf.write("\2\u00d3\u00d4\7\61\2\2\u00d4\u00d5\7\61\2\2\u00d5\u00d9")
        buf.write("\3\2\2\2\u00d6\u00d8\13\2\2\2\u00d7\u00d6\3\2\2\2\u00d8")
        buf.write("\u00db\3\2\2\2\u00d9\u00da\3\2\2\2\u00d9\u00d7\3\2\2\2")
        buf.write("\u00da\u00dc\3\2\2\2\u00db\u00d9\3\2\2\2\u00dc\u00dd\7")
        buf.write("\f\2\2\u00dd\u00de\3\2\2\2\u00de\u00df\b\37\2\2\u00df")
        buf.write(">\3\2\2\2\u00e0\u00e1\7^\2\2\u00e1\u00e2\7$\2\2\u00e2")
        buf.write("@\3\2\2\2\u00e3\u00e8\7$\2\2\u00e4\u00e7\5? \2\u00e5\u00e7")
        buf.write("\n\3\2\2\u00e6\u00e4\3\2\2\2\u00e6\u00e5\3\2\2\2\u00e7")
        buf.write("\u00ea\3\2\2\2\u00e8\u00e9\3\2\2\2\u00e8\u00e6\3\2\2\2")
        buf.write("\u00e9\u00eb\3\2\2\2\u00ea\u00e8\3\2\2\2\u00eb\u00ec\7")
        buf.write("$\2\2\u00ecB\3\2\2\2\u00ed\u00ee\7,\2\2\u00eeD\3\2\2\2")
        buf.write("\u00ef\u00f0\7\61\2\2\u00f0F\3\2\2\2\u00f1\u00f2\7-\2")
        buf.write("\2\u00f2H\3\2\2\2\u00f3\u00f4\7/\2\2\u00f4J\3\2\2\2\u00f5")
        buf.write("\u00f6\7>\2\2\u00f6L\3\2\2\2\u00f7\u00f8\7@\2\2\u00f8")
        buf.write("N\3\2\2\2\u00f9\u00fa\7>\2\2\u00fa\u00fb\7?\2\2\u00fb")
        buf.write("P\3\2\2\2\u00fc\u00fd\7@\2\2\u00fd\u00fe\7?\2\2\u00fe")
        buf.write("R\3\2\2\2\u00ff\u0100\7?\2\2\u0100\u0101\7?\2\2\u0101")
        buf.write("T\3\2\2\2\u0102\u0103\7#\2\2\u0103\u0104\7?\2\2\u0104")
        buf.write("V\3\2\2\2\u0105\u0106\7V\2\2\u0106\u0107\7t\2\2\u0107")
        buf.write("\u0108\7w\2\2\u0108\u010f\7g\2\2\u0109\u010a\7H\2\2\u010a")
        buf.write("\u010b\7c\2\2\u010b\u010c\7n\2\2\u010c\u010d\7u\2\2\u010d")
        buf.write("\u010f\7g\2\2\u010e\u0105\3\2\2\2\u010e\u0109\3\2\2\2")
        buf.write("\u010fX\3\2\2\2\u0110\u0113\7a\2\2\u0111\u0113\5e\63\2")
        buf.write("\u0112\u0110\3\2\2\2\u0112\u0111\3\2\2\2\u0113\u0119\3")
        buf.write("\2\2\2\u0114\u0118\7a\2\2\u0115\u0118\5e\63\2\u0116\u0118")
        buf.write("\5g\64\2\u0117\u0114\3\2\2\2\u0117\u0115\3\2\2\2\u0117")
        buf.write("\u0116\3\2\2\2\u0118\u011b\3\2\2\2\u0119\u0117\3\2\2\2")
        buf.write("\u0119\u011a\3\2\2\2\u011a\u0120\3\2\2\2\u011b\u0119\3")
        buf.write("\2\2\2\u011c\u011d\7\60\2\2\u011d\u011f\5Y-\2\u011e\u011c")
        buf.write("\3\2\2\2\u011f\u0122\3\2\2\2\u0120\u011e\3\2\2\2\u0120")
        buf.write("\u0121\3\2\2\2\u0121Z\3\2\2\2\u0122\u0120\3\2\2\2\u0123")
        buf.write("\u0124\7k\2\2\u0124\u0125\7p\2\2\u0125\u0126\7v\2\2\u0126")
        buf.write("\u0127\78\2\2\u0127\u0128\7\66\2\2\u0128\\\3\2\2\2\u0129")
        buf.write("\u012c\5a\61\2\u012a\u012b\7\60\2\2\u012b\u012d\5a\61")
        buf.write("\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u012f")
        buf.write("\3\2\2\2\u012e\u0130\5c\62\2\u012f\u012e\3\2\2\2\u012f")
        buf.write("\u0130\3\2\2\2\u0130^\3\2\2\2\u0131\u0132\5]/\2\u0132")
        buf.write("\u0133\7h\2\2\u0133`\3\2\2\2\u0134\u0136\5g\64\2\u0135")
        buf.write("\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0135\3\2\2\2")
        buf.write("\u0137\u0138\3\2\2\2\u0138b\3\2\2\2\u0139\u013b\t\4\2")
        buf.write("\2\u013a\u013c\t\5\2\2\u013b\u013a\3\2\2\2\u013b\u013c")
        buf.write("\3\2\2\2\u013c\u013d\3\2\2\2\u013d\u013e\5a\61\2\u013e")
        buf.write("d\3\2\2\2\u013f\u0140\t\6\2\2\u0140f\3\2\2\2\u0141\u0142")
        buf.write("\t\7\2\2\u0142h\3\2\2\2\u0143\u0144\7O\2\2\u0144\u0145")
        buf.write("\7G\2\2\u0145\u0146\7V\2\2\u0146\u0147\7C\2\2\u0147\u0148")
        buf.write("\7F\2\2\u0148\u0149\7C\2\2\u0149\u014a\7V\2\2\u014a\u014b")
        buf.write("\7C\2\2\u014b\u014c\7<\2\2\u014c\u0150\3\2\2\2\u014d\u014f")
        buf.write("\13\2\2\2\u014e\u014d\3\2\2\2\u014f\u0152\3\2\2\2\u0150")
        buf.write("\u014e\3\2\2\2\u0150\u0151\3\2\2\2\u0151j\3\2\2\2\u0152")
        buf.write("\u0150\3\2\2\2\23\2\u00c2\u00c4\u00cf\u00d9\u00e6\u00e8")
        buf.write("\u010e\u0112\u0117\u0119\u0120\u012c\u012f\u0137\u013b")
        buf.write("\u0150\3\b\2\2")
        return buf.getvalue()


class RelayLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    SEMVER = 27
    COMMENT = 28
    WS = 29
    LINE_COMMENT = 30
    QUOTED_STRING = 31
    MUL = 32
    DIV = 33
    ADD = 34
    SUB = 35
    LT = 36
    GT = 37
    LE = 38
    GE = 39
    EQ = 40
    NE = 41
    BOOL_LIT = 42
    CNAME = 43
    DATATYPE = 44
    FLOAT = 45
    NAT = 46
    METADATA = 47

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'@'", "'%'", "'['", "', '", "']'", "','", "'('", "')'", "'{'", 
            "'}'", "'.'", "'if'", "'else'", "'let'", "'='", "';'", "';;'", 
            "'fn'", "'->'", "'def'", "'type'", "'|'", "':'", "'Tensor'", 
            "'_'", "'meta'", "'v0.0.3'", "'*'", "'/'", "'+'", "'-'", "'<'", 
            "'>'", "'<='", "'>='", "'=='", "'!='", "'int64'" ]

    symbolicNames = [ "<INVALID>",
            "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "QUOTED_STRING", 
            "MUL", "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", 
            "BOOL_LIT", "CNAME", "DATATYPE", "FLOAT", "NAT", "METADATA" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "ESCAPED_QUOTE", 
                  "QUOTED_STRING", "MUL", "DIV", "ADD", "SUB", "LT", "GT", 
                  "LE", "GE", "EQ", "NE", "BOOL_LIT", "CNAME", "DATATYPE", 
                  "PREFLOAT", "FLOAT", "NAT", "EXP", "LETTER", "DIGIT", 
                  "METADATA" ]

    grammarFileName = "Relay.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


