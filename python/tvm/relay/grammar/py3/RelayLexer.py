# Generated from /Users/doobs/Code/repo/sampl/tvm/python/tvm/relay/grammar/Relay.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\64")
        buf.write("\u016d\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3")
        buf.write("\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3")
        buf.write("\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17")
        buf.write("\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3\34")
        buf.write("\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3")
        buf.write(" \7 \u00e0\n \f \16 \u00e3\13 \3 \3 \3 \3 \3 \3!\6!\u00eb")
        buf.write("\n!\r!\16!\u00ec\3!\3!\3\"\3\"\3\"\3\"\7\"\u00f5\n\"\f")
        buf.write("\"\16\"\u00f8\13\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\7")
        buf.write("$\u0104\n$\f$\16$\u0107\13$\3$\3$\3%\3%\3&\3&\3\'\3\'")
        buf.write("\3(\3(\3)\3)\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3")
        buf.write(".\3/\3/\3/\3/\3/\3/\3/\3/\3/\5/\u012c\n/\3\60\3\60\3\60")
        buf.write("\3\60\7\60\u0132\n\60\f\60\16\60\u0135\13\60\3\61\3\61")
        buf.write("\3\61\3\61\7\61\u013b\n\61\f\61\16\61\u013e\13\61\3\62")
        buf.write("\3\62\3\62\5\62\u0143\n\62\3\62\5\62\u0146\n\62\3\63\3")
        buf.write("\63\3\63\3\64\6\64\u014c\n\64\r\64\16\64\u014d\3\65\3")
        buf.write("\65\5\65\u0152\n\65\3\65\3\65\3\66\3\66\3\67\3\67\38\3")
        buf.write("8\39\39\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\3:\7:\u0169\n:\f")
        buf.write(":\16:\u016c\13:\5\u00e1\u00f6\u0105\2;\3\3\5\4\7\5\t\6")
        buf.write("\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20")
        buf.write("\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65")
        buf.write("\34\67\359\36;\37= ?!A\"C#E\2G$I%K&M\'O(Q)S*U+W,Y-[.]")
        buf.write("/_\60a\61c\2e\62g\63i\2k\2m\2o\2q\2s\64\3\2\n\5\2\13\f")
        buf.write("\17\17\"\"\4\2\f\f\17\17\4\2GGgg\4\2--//\3\2c|\3\2C\\")
        buf.write("\4\2C\\c|\3\2\62;\2\u0177\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2G\3\2")
        buf.write("\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3")
        buf.write("\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[")
        buf.write("\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2e\3\2\2\2\2")
        buf.write("g\3\2\2\2\2s\3\2\2\2\3u\3\2\2\2\5{\3\2\2\2\7}\3\2\2\2")
        buf.write("\t\177\3\2\2\2\13\u0081\3\2\2\2\r\u0083\3\2\2\2\17\u0085")
        buf.write("\3\2\2\2\21\u0087\3\2\2\2\23\u0089\3\2\2\2\25\u008b\3")
        buf.write("\2\2\2\27\u008d\3\2\2\2\31\u008f\3\2\2\2\33\u0092\3\2")
        buf.write("\2\2\35\u0097\3\2\2\2\37\u009b\3\2\2\2!\u009d\3\2\2\2")
        buf.write("#\u009f\3\2\2\2%\u00a2\3\2\2\2\'\u00a5\3\2\2\2)\u00a8")
        buf.write("\3\2\2\2+\u00ac\3\2\2\2-\u00b1\3\2\2\2/\u00b3\3\2\2\2")
        buf.write("\61\u00b6\3\2\2\2\63\u00bc\3\2\2\2\65\u00c3\3\2\2\2\67")
        buf.write("\u00c5\3\2\2\29\u00c7\3\2\2\2;\u00ce\3\2\2\2=\u00d3\3")
        buf.write("\2\2\2?\u00da\3\2\2\2A\u00ea\3\2\2\2C\u00f0\3\2\2\2E\u00fd")
        buf.write("\3\2\2\2G\u0100\3\2\2\2I\u010a\3\2\2\2K\u010c\3\2\2\2")
        buf.write("M\u010e\3\2\2\2O\u0110\3\2\2\2Q\u0112\3\2\2\2S\u0114\3")
        buf.write("\2\2\2U\u0116\3\2\2\2W\u0119\3\2\2\2Y\u011c\3\2\2\2[\u011f")
        buf.write("\3\2\2\2]\u012b\3\2\2\2_\u012d\3\2\2\2a\u0136\3\2\2\2")
        buf.write("c\u013f\3\2\2\2e\u0147\3\2\2\2g\u014b\3\2\2\2i\u014f\3")
        buf.write("\2\2\2k\u0155\3\2\2\2m\u0157\3\2\2\2o\u0159\3\2\2\2q\u015b")
        buf.write("\3\2\2\2s\u015d\3\2\2\2uv\7k\2\2vw\7p\2\2wx\7v\2\2xy\7")
        buf.write("\65\2\2yz\7\64\2\2z\4\3\2\2\2{|\7\60\2\2|\6\3\2\2\2}~")
        buf.write("\7B\2\2~\b\3\2\2\2\177\u0080\7\'\2\2\u0080\n\3\2\2\2\u0081")
        buf.write("\u0082\7.\2\2\u0082\f\3\2\2\2\u0083\u0084\7*\2\2\u0084")
        buf.write("\16\3\2\2\2\u0085\u0086\7+\2\2\u0086\20\3\2\2\2\u0087")
        buf.write("\u0088\7}\2\2\u0088\22\3\2\2\2\u0089\u008a\7\177\2\2\u008a")
        buf.write("\24\3\2\2\2\u008b\u008c\7]\2\2\u008c\26\3\2\2\2\u008d")
        buf.write("\u008e\7_\2\2\u008e\30\3\2\2\2\u008f\u0090\7k\2\2\u0090")
        buf.write("\u0091\7h\2\2\u0091\32\3\2\2\2\u0092\u0093\7g\2\2\u0093")
        buf.write("\u0094\7n\2\2\u0094\u0095\7u\2\2\u0095\u0096\7g\2\2\u0096")
        buf.write("\34\3\2\2\2\u0097\u0098\7n\2\2\u0098\u0099\7g\2\2\u0099")
        buf.write("\u009a\7v\2\2\u009a\36\3\2\2\2\u009b\u009c\7?\2\2\u009c")
        buf.write(" \3\2\2\2\u009d\u009e\7=\2\2\u009e\"\3\2\2\2\u009f\u00a0")
        buf.write("\7=\2\2\u00a0\u00a1\7=\2\2\u00a1$\3\2\2\2\u00a2\u00a3")
        buf.write("\7h\2\2\u00a3\u00a4\7p\2\2\u00a4&\3\2\2\2\u00a5\u00a6")
        buf.write("\7/\2\2\u00a6\u00a7\7@\2\2\u00a7(\3\2\2\2\u00a8\u00a9")
        buf.write("\7f\2\2\u00a9\u00aa\7g\2\2\u00aa\u00ab\7h\2\2\u00ab*\3")
        buf.write("\2\2\2\u00ac\u00ad\7v\2\2\u00ad\u00ae\7{\2\2\u00ae\u00af")
        buf.write("\7r\2\2\u00af\u00b0\7g\2\2\u00b0,\3\2\2\2\u00b1\u00b2")
        buf.write("\7~\2\2\u00b2.\3\2\2\2\u00b3\u00b4\7?\2\2\u00b4\u00b5")
        buf.write("\7@\2\2\u00b5\60\3\2\2\2\u00b6\u00b7\7o\2\2\u00b7\u00b8")
        buf.write("\7c\2\2\u00b8\u00b9\7v\2\2\u00b9\u00ba\7e\2\2\u00ba\u00bb")
        buf.write("\7j\2\2\u00bb\62\3\2\2\2\u00bc\u00bd\7o\2\2\u00bd\u00be")
        buf.write("\7c\2\2\u00be\u00bf\7v\2\2\u00bf\u00c0\7e\2\2\u00c0\u00c1")
        buf.write("\7j\2\2\u00c1\u00c2\7A\2\2\u00c2\64\3\2\2\2\u00c3\u00c4")
        buf.write("\7a\2\2\u00c4\66\3\2\2\2\u00c5\u00c6\7<\2\2\u00c68\3\2")
        buf.write("\2\2\u00c7\u00c8\7V\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca")
        buf.write("\7p\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7q\2\2\u00cc\u00cd")
        buf.write("\7t\2\2\u00cd:\3\2\2\2\u00ce\u00cf\7o\2\2\u00cf\u00d0")
        buf.write("\7g\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7c\2\2\u00d2<\3")
        buf.write("\2\2\2\u00d3\u00d4\7x\2\2\u00d4\u00d5\7\62\2\2\u00d5\u00d6")
        buf.write("\7\60\2\2\u00d6\u00d7\7\62\2\2\u00d7\u00d8\7\60\2\2\u00d8")
        buf.write("\u00d9\7\65\2\2\u00d9>\3\2\2\2\u00da\u00db\7\61\2\2\u00db")
        buf.write("\u00dc\7,\2\2\u00dc\u00e1\3\2\2\2\u00dd\u00e0\5? \2\u00de")
        buf.write("\u00e0\13\2\2\2\u00df\u00dd\3\2\2\2\u00df\u00de\3\2\2")
        buf.write("\2\u00e0\u00e3\3\2\2\2\u00e1\u00e2\3\2\2\2\u00e1\u00df")
        buf.write("\3\2\2\2\u00e2\u00e4\3\2\2\2\u00e3\u00e1\3\2\2\2\u00e4")
        buf.write("\u00e5\7,\2\2\u00e5\u00e6\7\61\2\2\u00e6\u00e7\3\2\2\2")
        buf.write("\u00e7\u00e8\b \2\2\u00e8@\3\2\2\2\u00e9\u00eb\t\2\2\2")
        buf.write("\u00ea\u00e9\3\2\2\2\u00eb\u00ec\3\2\2\2\u00ec\u00ea\3")
        buf.write("\2\2\2\u00ec\u00ed\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\u00ef")
        buf.write("\b!\2\2\u00efB\3\2\2\2\u00f0\u00f1\7\61\2\2\u00f1\u00f2")
        buf.write("\7\61\2\2\u00f2\u00f6\3\2\2\2\u00f3\u00f5\13\2\2\2\u00f4")
        buf.write("\u00f3\3\2\2\2\u00f5\u00f8\3\2\2\2\u00f6\u00f7\3\2\2\2")
        buf.write("\u00f6\u00f4\3\2\2\2\u00f7\u00f9\3\2\2\2\u00f8\u00f6\3")
        buf.write("\2\2\2\u00f9\u00fa\7\f\2\2\u00fa\u00fb\3\2\2\2\u00fb\u00fc")
        buf.write("\b\"\2\2\u00fcD\3\2\2\2\u00fd\u00fe\7^\2\2\u00fe\u00ff")
        buf.write("\7$\2\2\u00ffF\3\2\2\2\u0100\u0105\7$\2\2\u0101\u0104")
        buf.write("\5E#\2\u0102\u0104\n\3\2\2\u0103\u0101\3\2\2\2\u0103\u0102")
        buf.write("\3\2\2\2\u0104\u0107\3\2\2\2\u0105\u0106\3\2\2\2\u0105")
        buf.write("\u0103\3\2\2\2\u0106\u0108\3\2\2\2\u0107\u0105\3\2\2\2")
        buf.write("\u0108\u0109\7$\2\2\u0109H\3\2\2\2\u010a\u010b\7,\2\2")
        buf.write("\u010bJ\3\2\2\2\u010c\u010d\7\61\2\2\u010dL\3\2\2\2\u010e")
        buf.write("\u010f\7-\2\2\u010fN\3\2\2\2\u0110\u0111\7/\2\2\u0111")
        buf.write("P\3\2\2\2\u0112\u0113\7>\2\2\u0113R\3\2\2\2\u0114\u0115")
        buf.write("\7@\2\2\u0115T\3\2\2\2\u0116\u0117\7>\2\2\u0117\u0118")
        buf.write("\7?\2\2\u0118V\3\2\2\2\u0119\u011a\7@\2\2\u011a\u011b")
        buf.write("\7?\2\2\u011bX\3\2\2\2\u011c\u011d\7?\2\2\u011d\u011e")
        buf.write("\7?\2\2\u011eZ\3\2\2\2\u011f\u0120\7#\2\2\u0120\u0121")
        buf.write("\7?\2\2\u0121\\\3\2\2\2\u0122\u0123\7V\2\2\u0123\u0124")
        buf.write("\7t\2\2\u0124\u0125\7w\2\2\u0125\u012c\7g\2\2\u0126\u0127")
        buf.write("\7H\2\2\u0127\u0128\7c\2\2\u0128\u0129\7n\2\2\u0129\u012a")
        buf.write("\7u\2\2\u012a\u012c\7g\2\2\u012b\u0122\3\2\2\2\u012b\u0126")
        buf.write("\3\2\2\2\u012c^\3\2\2\2\u012d\u0133\5m\67\2\u012e\u0132")
        buf.write("\7a\2\2\u012f\u0132\5o8\2\u0130\u0132\5q9\2\u0131\u012e")
        buf.write("\3\2\2\2\u0131\u012f\3\2\2\2\u0131\u0130\3\2\2\2\u0132")
        buf.write("\u0135\3\2\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2\2\2")
        buf.write("\u0134`\3\2\2\2\u0135\u0133\3\2\2\2\u0136\u013c\5k\66")
        buf.write("\2\u0137\u013b\7a\2\2\u0138\u013b\5o8\2\u0139\u013b\5")
        buf.write("q9\2\u013a\u0137\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u0139")
        buf.write("\3\2\2\2\u013b\u013e\3\2\2\2\u013c\u013a\3\2\2\2\u013c")
        buf.write("\u013d\3\2\2\2\u013db\3\2\2\2\u013e\u013c\3\2\2\2\u013f")
        buf.write("\u0142\5g\64\2\u0140\u0141\7\60\2\2\u0141\u0143\5g\64")
        buf.write("\2\u0142\u0140\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145")
        buf.write("\3\2\2\2\u0144\u0146\5i\65\2\u0145\u0144\3\2\2\2\u0145")
        buf.write("\u0146\3\2\2\2\u0146d\3\2\2\2\u0147\u0148\5c\62\2\u0148")
        buf.write("\u0149\7h\2\2\u0149f\3\2\2\2\u014a\u014c\5q9\2\u014b\u014a")
        buf.write("\3\2\2\2\u014c\u014d\3\2\2\2\u014d\u014b\3\2\2\2\u014d")
        buf.write("\u014e\3\2\2\2\u014eh\3\2\2\2\u014f\u0151\t\4\2\2\u0150")
        buf.write("\u0152\t\5\2\2\u0151\u0150\3\2\2\2\u0151\u0152\3\2\2\2")
        buf.write("\u0152\u0153\3\2\2\2\u0153\u0154\5g\64\2\u0154j\3\2\2")
        buf.write("\2\u0155\u0156\t\6\2\2\u0156l\3\2\2\2\u0157\u0158\t\7")
        buf.write("\2\2\u0158n\3\2\2\2\u0159\u015a\t\b\2\2\u015ap\3\2\2\2")
        buf.write("\u015b\u015c\t\t\2\2\u015cr\3\2\2\2\u015d\u015e\7O\2\2")
        buf.write("\u015e\u015f\7G\2\2\u015f\u0160\7V\2\2\u0160\u0161\7C")
        buf.write("\2\2\u0161\u0162\7F\2\2\u0162\u0163\7C\2\2\u0163\u0164")
        buf.write("\7V\2\2\u0164\u0165\7C\2\2\u0165\u0166\7<\2\2\u0166\u016a")
        buf.write("\3\2\2\2\u0167\u0169\13\2\2\2\u0168\u0167\3\2\2\2\u0169")
        buf.write("\u016c\3\2\2\2\u016a\u0168\3\2\2\2\u016a\u016b\3\2\2\2")
        buf.write("\u016bt\3\2\2\2\u016c\u016a\3\2\2\2\23\2\u00df\u00e1\u00ec")
        buf.write("\u00f6\u0103\u0105\u012b\u0131\u0133\u013a\u013c\u0142")
        buf.write("\u0145\u014d\u0151\u016a\3\b\2\2")
        return buf.getvalue()


class RelayLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    SEMVER = 30
    COMMENT = 31
    WS = 32
    LINE_COMMENT = 33
    QUOTED_STRING = 34
    MUL = 35
    DIV = 36
    ADD = 37
    SUB = 38
    LT = 39
    GT = 40
    LE = 41
    GE = 42
    EQ = 43
    NE = 44
    BOOL_LIT = 45
    START_UPPER_CNAME = 46
    START_LOWER_CNAME = 47
    FLOAT = 48
    NAT = 49
    METADATA = 50

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'int32'", "'.'", "'@'", "'%'", "','", "'('", "')'", "'{'", 
            "'}'", "'['", "']'", "'if'", "'else'", "'let'", "'='", "';'", 
            "';;'", "'fn'", "'->'", "'def'", "'type'", "'|'", "'=>'", "'match'", 
            "'match?'", "'_'", "':'", "'Tensor'", "'meta'", "'v0.0.3'", 
            "'*'", "'/'", "'+'", "'-'", "'<'", "'>'", "'<='", "'>='", "'=='", 
            "'!='" ]

    symbolicNames = [ "<INVALID>",
            "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "QUOTED_STRING", 
            "MUL", "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", 
            "BOOL_LIT", "START_UPPER_CNAME", "START_LOWER_CNAME", "FLOAT", 
            "NAT", "METADATA" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "SEMVER", "COMMENT", "WS", 
                  "LINE_COMMENT", "ESCAPED_QUOTE", "QUOTED_STRING", "MUL", 
                  "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", 
                  "BOOL_LIT", "START_UPPER_CNAME", "START_LOWER_CNAME", 
                  "PREFLOAT", "FLOAT", "NAT", "EXP", "LOWER_LETTER", "UPPER_LETTER", 
                  "LETTER", "DIGIT", "METADATA" ]

    grammarFileName = "Relay.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


