# Generated from /Users/doobs/Code/repo/sampl/tvm/python/tvm/relay/grammar/Relay.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\63")
        buf.write("\u016c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\3\2\3")
        buf.write("\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t")
        buf.write("\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3")
        buf.write("\r\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3")
        buf.write("\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27\3\27\3\30")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\37\3\37\3\37\3\37\3\37\7\37\u00d8\n\37\f")
        buf.write("\37\16\37\u00db\13\37\3\37\3\37\3\37\3\37\3\37\3 \6 \u00e3")
        buf.write("\n \r \16 \u00e4\3 \3 \3!\3!\3!\3!\7!\u00ed\n!\f!\16!")
        buf.write("\u00f0\13!\3!\3!\3!\3!\3\"\3\"\3\"\3#\3#\3#\7#\u00fc\n")
        buf.write("#\f#\16#\u00ff\13#\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(")
        buf.write("\3(\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3-\3-\3-\3.\3.\3")
        buf.write(".\3.\3.\3.\3.\3.\3.\5.\u0124\n.\3/\3/\5/\u0128\n/\3/\3")
        buf.write("/\3/\7/\u012d\n/\f/\16/\u0130\13/\3/\3/\7/\u0134\n/\f")
        buf.write("/\16/\u0137\13/\3\60\3\60\3\60\5\60\u013c\n\60\3\60\5")
        buf.write("\60\u013f\n\60\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\62\3\63\6\63\u014b\n\63\r\63\16\63\u014c\3\64\3\64")
        buf.write("\5\64\u0151\n\64\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3")
        buf.write("\67\38\38\39\39\39\39\39\39\39\39\39\39\39\79\u0168\n")
        buf.write("9\f9\169\u016b\139\5\u00d9\u00ee\u00fd\2:\3\3\5\4\7\5")
        buf.write("\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write("\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33")
        buf.write("\65\34\67\359\36;\37= ?!A\"C\2E#G$I%K&M\'O(Q)S*U+W,Y-")
        buf.write("[.]/_\2a\60c\61e\62g\2i\2k\2m\2o\2q\63\3\2\n\5\2\13\f")
        buf.write("\17\17\"\"\4\2\f\f\17\17\4\2GGgg\4\2--//\3\2c|\3\2C\\")
        buf.write("\4\2C\\c|\3\2\62;\2\u0175\2\3\3\2\2\2\2\5\3\2\2\2\2\7")
        buf.write("\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2")
        buf.write("\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2")
        buf.write("\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2")
        buf.write("\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2")
        buf.write("\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63")
        buf.write("\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2")
        buf.write("\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2E\3\2\2\2\2G\3\2")
        buf.write("\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3")
        buf.write("\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[")
        buf.write("\3\2\2\2\2]\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2")
        buf.write("q\3\2\2\2\3s\3\2\2\2\5u\3\2\2\2\7w\3\2\2\2\ty\3\2\2\2")
        buf.write("\13{\3\2\2\2\r}\3\2\2\2\17\177\3\2\2\2\21\u0081\3\2\2")
        buf.write("\2\23\u0083\3\2\2\2\25\u0085\3\2\2\2\27\u0088\3\2\2\2")
        buf.write("\31\u008d\3\2\2\2\33\u008f\3\2\2\2\35\u0093\3\2\2\2\37")
        buf.write("\u0095\3\2\2\2!\u0097\3\2\2\2#\u009a\3\2\2\2%\u009d\3")
        buf.write("\2\2\2\'\u00a0\3\2\2\2)\u00a4\3\2\2\2+\u00a9\3\2\2\2-")
        buf.write("\u00ab\3\2\2\2/\u00ae\3\2\2\2\61\u00b4\3\2\2\2\63\u00bb")
        buf.write("\3\2\2\2\65\u00bd\3\2\2\2\67\u00bf\3\2\2\29\u00c6\3\2")
        buf.write("\2\2;\u00cb\3\2\2\2=\u00d2\3\2\2\2?\u00e2\3\2\2\2A\u00e8")
        buf.write("\3\2\2\2C\u00f5\3\2\2\2E\u00f8\3\2\2\2G\u0102\3\2\2\2")
        buf.write("I\u0104\3\2\2\2K\u0106\3\2\2\2M\u0108\3\2\2\2O\u010a\3")
        buf.write("\2\2\2Q\u010c\3\2\2\2S\u010e\3\2\2\2U\u0111\3\2\2\2W\u0114")
        buf.write("\3\2\2\2Y\u0117\3\2\2\2[\u0123\3\2\2\2]\u0127\3\2\2\2")
        buf.write("_\u0138\3\2\2\2a\u0140\3\2\2\2c\u0143\3\2\2\2e\u014a\3")
        buf.write("\2\2\2g\u014e\3\2\2\2i\u0154\3\2\2\2k\u0156\3\2\2\2m\u0158")
        buf.write("\3\2\2\2o\u015a\3\2\2\2q\u015c\3\2\2\2st\7B\2\2t\4\3\2")
        buf.write("\2\2uv\7\'\2\2v\6\3\2\2\2wx\7.\2\2x\b\3\2\2\2yz\7*\2\2")
        buf.write("z\n\3\2\2\2{|\7+\2\2|\f\3\2\2\2}~\7}\2\2~\16\3\2\2\2\177")
        buf.write("\u0080\7\177\2\2\u0080\20\3\2\2\2\u0081\u0082\7]\2\2\u0082")
        buf.write("\22\3\2\2\2\u0083\u0084\7_\2\2\u0084\24\3\2\2\2\u0085")
        buf.write("\u0086\7k\2\2\u0086\u0087\7h\2\2\u0087\26\3\2\2\2\u0088")
        buf.write("\u0089\7g\2\2\u0089\u008a\7n\2\2\u008a\u008b\7u\2\2\u008b")
        buf.write("\u008c\7g\2\2\u008c\30\3\2\2\2\u008d\u008e\7\60\2\2\u008e")
        buf.write("\32\3\2\2\2\u008f\u0090\7n\2\2\u0090\u0091\7g\2\2\u0091")
        buf.write("\u0092\7v\2\2\u0092\34\3\2\2\2\u0093\u0094\7?\2\2\u0094")
        buf.write("\36\3\2\2\2\u0095\u0096\7=\2\2\u0096 \3\2\2\2\u0097\u0098")
        buf.write("\7=\2\2\u0098\u0099\7=\2\2\u0099\"\3\2\2\2\u009a\u009b")
        buf.write("\7h\2\2\u009b\u009c\7p\2\2\u009c$\3\2\2\2\u009d\u009e")
        buf.write("\7/\2\2\u009e\u009f\7@\2\2\u009f&\3\2\2\2\u00a0\u00a1")
        buf.write("\7f\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3\7h\2\2\u00a3(\3")
        buf.write("\2\2\2\u00a4\u00a5\7v\2\2\u00a5\u00a6\7{\2\2\u00a6\u00a7")
        buf.write("\7r\2\2\u00a7\u00a8\7g\2\2\u00a8*\3\2\2\2\u00a9\u00aa")
        buf.write("\7~\2\2\u00aa,\3\2\2\2\u00ab\u00ac\7?\2\2\u00ac\u00ad")
        buf.write("\7@\2\2\u00ad.\3\2\2\2\u00ae\u00af\7o\2\2\u00af\u00b0")
        buf.write("\7c\2\2\u00b0\u00b1\7v\2\2\u00b1\u00b2\7e\2\2\u00b2\u00b3")
        buf.write("\7j\2\2\u00b3\60\3\2\2\2\u00b4\u00b5\7o\2\2\u00b5\u00b6")
        buf.write("\7c\2\2\u00b6\u00b7\7v\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9")
        buf.write("\7j\2\2\u00b9\u00ba\7A\2\2\u00ba\62\3\2\2\2\u00bb\u00bc")
        buf.write("\7a\2\2\u00bc\64\3\2\2\2\u00bd\u00be\7<\2\2\u00be\66\3")
        buf.write("\2\2\2\u00bf\u00c0\7V\2\2\u00c0\u00c1\7g\2\2\u00c1\u00c2")
        buf.write("\7p\2\2\u00c2\u00c3\7u\2\2\u00c3\u00c4\7q\2\2\u00c4\u00c5")
        buf.write("\7t\2\2\u00c58\3\2\2\2\u00c6\u00c7\7o\2\2\u00c7\u00c8")
        buf.write("\7g\2\2\u00c8\u00c9\7v\2\2\u00c9\u00ca\7c\2\2\u00ca:\3")
        buf.write("\2\2\2\u00cb\u00cc\7x\2\2\u00cc\u00cd\7\62\2\2\u00cd\u00ce")
        buf.write("\7\60\2\2\u00ce\u00cf\7\62\2\2\u00cf\u00d0\7\60\2\2\u00d0")
        buf.write("\u00d1\7\65\2\2\u00d1<\3\2\2\2\u00d2\u00d3\7\61\2\2\u00d3")
        buf.write("\u00d4\7,\2\2\u00d4\u00d9\3\2\2\2\u00d5\u00d8\5=\37\2")
        buf.write("\u00d6\u00d8\13\2\2\2\u00d7\u00d5\3\2\2\2\u00d7\u00d6")
        buf.write("\3\2\2\2\u00d8\u00db\3\2\2\2\u00d9\u00da\3\2\2\2\u00d9")
        buf.write("\u00d7\3\2\2\2\u00da\u00dc\3\2\2\2\u00db\u00d9\3\2\2\2")
        buf.write("\u00dc\u00dd\7,\2\2\u00dd\u00de\7\61\2\2\u00de\u00df\3")
        buf.write("\2\2\2\u00df\u00e0\b\37\2\2\u00e0>\3\2\2\2\u00e1\u00e3")
        buf.write("\t\2\2\2\u00e2\u00e1\3\2\2\2\u00e3\u00e4\3\2\2\2\u00e4")
        buf.write("\u00e2\3\2\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e6\3\2\2\2")
        buf.write("\u00e6\u00e7\b \2\2\u00e7@\3\2\2\2\u00e8\u00e9\7\61\2")
        buf.write("\2\u00e9\u00ea\7\61\2\2\u00ea\u00ee\3\2\2\2\u00eb\u00ed")
        buf.write("\13\2\2\2\u00ec\u00eb\3\2\2\2\u00ed\u00f0\3\2\2\2\u00ee")
        buf.write("\u00ef\3\2\2\2\u00ee\u00ec\3\2\2\2\u00ef\u00f1\3\2\2\2")
        buf.write("\u00f0\u00ee\3\2\2\2\u00f1\u00f2\7\f\2\2\u00f2\u00f3\3")
        buf.write("\2\2\2\u00f3\u00f4\b!\2\2\u00f4B\3\2\2\2\u00f5\u00f6\7")
        buf.write("^\2\2\u00f6\u00f7\7$\2\2\u00f7D\3\2\2\2\u00f8\u00fd\7")
        buf.write("$\2\2\u00f9\u00fc\5C\"\2\u00fa\u00fc\n\3\2\2\u00fb\u00f9")
        buf.write("\3\2\2\2\u00fb\u00fa\3\2\2\2\u00fc\u00ff\3\2\2\2\u00fd")
        buf.write("\u00fe\3\2\2\2\u00fd\u00fb\3\2\2\2\u00fe\u0100\3\2\2\2")
        buf.write("\u00ff\u00fd\3\2\2\2\u0100\u0101\7$\2\2\u0101F\3\2\2\2")
        buf.write("\u0102\u0103\7,\2\2\u0103H\3\2\2\2\u0104\u0105\7\61\2")
        buf.write("\2\u0105J\3\2\2\2\u0106\u0107\7-\2\2\u0107L\3\2\2\2\u0108")
        buf.write("\u0109\7/\2\2\u0109N\3\2\2\2\u010a\u010b\7>\2\2\u010b")
        buf.write("P\3\2\2\2\u010c\u010d\7@\2\2\u010dR\3\2\2\2\u010e\u010f")
        buf.write("\7>\2\2\u010f\u0110\7?\2\2\u0110T\3\2\2\2\u0111\u0112")
        buf.write("\7@\2\2\u0112\u0113\7?\2\2\u0113V\3\2\2\2\u0114\u0115")
        buf.write("\7?\2\2\u0115\u0116\7?\2\2\u0116X\3\2\2\2\u0117\u0118")
        buf.write("\7#\2\2\u0118\u0119\7?\2\2\u0119Z\3\2\2\2\u011a\u011b")
        buf.write("\7V\2\2\u011b\u011c\7t\2\2\u011c\u011d\7w\2\2\u011d\u0124")
        buf.write("\7g\2\2\u011e\u011f\7H\2\2\u011f\u0120\7c\2\2\u0120\u0121")
        buf.write("\7n\2\2\u0121\u0122\7u\2\2\u0122\u0124\7g\2\2\u0123\u011a")
        buf.write("\3\2\2\2\u0123\u011e\3\2\2\2\u0124\\\3\2\2\2\u0125\u0128")
        buf.write("\7a\2\2\u0126\u0128\5m\67\2\u0127\u0125\3\2\2\2\u0127")
        buf.write("\u0126\3\2\2\2\u0128\u012e\3\2\2\2\u0129\u012d\7a\2\2")
        buf.write("\u012a\u012d\5m\67\2\u012b\u012d\5o8\2\u012c\u0129\3\2")
        buf.write("\2\2\u012c\u012a\3\2\2\2\u012c\u012b\3\2\2\2\u012d\u0130")
        buf.write("\3\2\2\2\u012e\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012f")
        buf.write("\u0135\3\2\2\2\u0130\u012e\3\2\2\2\u0131\u0132\7\60\2")
        buf.write("\2\u0132\u0134\5]/\2\u0133\u0131\3\2\2\2\u0134\u0137\3")
        buf.write("\2\2\2\u0135\u0133\3\2\2\2\u0135\u0136\3\2\2\2\u0136^")
        buf.write("\3\2\2\2\u0137\u0135\3\2\2\2\u0138\u013b\5e\63\2\u0139")
        buf.write("\u013a\7\60\2\2\u013a\u013c\5e\63\2\u013b\u0139\3\2\2")
        buf.write("\2\u013b\u013c\3\2\2\2\u013c\u013e\3\2\2\2\u013d\u013f")
        buf.write("\5g\64\2\u013e\u013d\3\2\2\2\u013e\u013f\3\2\2\2\u013f")
        buf.write("`\3\2\2\2\u0140\u0141\5_\60\2\u0141\u0142\7h\2\2\u0142")
        buf.write("b\3\2\2\2\u0143\u0144\7k\2\2\u0144\u0145\7p\2\2\u0145")
        buf.write("\u0146\7v\2\2\u0146\u0147\7\65\2\2\u0147\u0148\7\64\2")
        buf.write("\2\u0148d\3\2\2\2\u0149\u014b\5o8\2\u014a\u0149\3\2\2")
        buf.write("\2\u014b\u014c\3\2\2\2\u014c\u014a\3\2\2\2\u014c\u014d")
        buf.write("\3\2\2\2\u014df\3\2\2\2\u014e\u0150\t\4\2\2\u014f\u0151")
        buf.write("\t\5\2\2\u0150\u014f\3\2\2\2\u0150\u0151\3\2\2\2\u0151")
        buf.write("\u0152\3\2\2\2\u0152\u0153\5e\63\2\u0153h\3\2\2\2\u0154")
        buf.write("\u0155\t\6\2\2\u0155j\3\2\2\2\u0156\u0157\t\7\2\2\u0157")
        buf.write("l\3\2\2\2\u0158\u0159\t\b\2\2\u0159n\3\2\2\2\u015a\u015b")
        buf.write("\t\t\2\2\u015bp\3\2\2\2\u015c\u015d\7O\2\2\u015d\u015e")
        buf.write("\7G\2\2\u015e\u015f\7V\2\2\u015f\u0160\7C\2\2\u0160\u0161")
        buf.write("\7F\2\2\u0161\u0162\7C\2\2\u0162\u0163\7V\2\2\u0163\u0164")
        buf.write("\7C\2\2\u0164\u0165\7<\2\2\u0165\u0169\3\2\2\2\u0166\u0168")
        buf.write("\13\2\2\2\u0167\u0166\3\2\2\2\u0168\u016b\3\2\2\2\u0169")
        buf.write("\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016ar\3\2\2\2\u016b")
        buf.write("\u0169\3\2\2\2\23\2\u00d7\u00d9\u00e4\u00ee\u00fb\u00fd")
        buf.write("\u0123\u0127\u012c\u012e\u0135\u013b\u013e\u014c\u0150")
        buf.write("\u0169\3\b\2\2")
        return buf.getvalue()


class RelayLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    SEMVER = 29
    COMMENT = 30
    WS = 31
    LINE_COMMENT = 32
    QUOTED_STRING = 33
    MUL = 34
    DIV = 35
    ADD = 36
    SUB = 37
    LT = 38
    GT = 39
    LE = 40
    GE = 41
    EQ = 42
    NE = 43
    BOOL_LIT = 44
    CNAME = 45
    FLOAT = 46
    BASE_TYPE = 47
    NAT = 48
    METADATA = 49

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'@'", "'%'", "','", "'('", "')'", "'{'", "'}'", "'['", "']'", 
            "'if'", "'else'", "'.'", "'let'", "'='", "';'", "';;'", "'fn'", 
            "'->'", "'def'", "'type'", "'|'", "'=>'", "'match'", "'match?'", 
            "'_'", "':'", "'Tensor'", "'meta'", "'v0.0.3'", "'*'", "'/'", 
            "'+'", "'-'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", 
            "'int32'" ]

    symbolicNames = [ "<INVALID>",
            "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "QUOTED_STRING", 
            "MUL", "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", 
            "BOOL_LIT", "CNAME", "FLOAT", "BASE_TYPE", "NAT", "METADATA" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "SEMVER", "COMMENT", "WS", "LINE_COMMENT", 
                  "ESCAPED_QUOTE", "QUOTED_STRING", "MUL", "DIV", "ADD", 
                  "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", "BOOL_LIT", 
                  "CNAME", "PREFLOAT", "FLOAT", "BASE_TYPE", "NAT", "EXP", 
                  "LOWER_LETTER", "UPPER_LETTER", "LETTER", "DIGIT", "METADATA" ]

    grammarFileName = "Relay.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


