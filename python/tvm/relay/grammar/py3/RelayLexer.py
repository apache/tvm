# Generated from /Users/doobs/Code/repo/sampl/tvm/python/tvm/relay/grammar/Relay.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60")
        buf.write("\u014e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7")
        buf.write("\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3")
        buf.write("\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34")
        buf.write("\3\34\3\34\3\34\3\34\7\34\u00be\n\34\f\34\16\34\u00c1")
        buf.write("\13\34\3\34\3\34\3\34\3\34\3\34\3\35\6\35\u00c9\n\35\r")
        buf.write("\35\16\35\u00ca\3\35\3\35\3\36\3\36\3\36\3\36\7\36\u00d3")
        buf.write("\n\36\f\36\16\36\u00d6\13\36\3\36\3\36\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3 \3 \3 \7 \u00e2\n \f \16 \u00e5\13 \3 \3")
        buf.write(" \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3\'\3")
        buf.write("(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3+\5")
        buf.write("+\u010a\n+\3,\3,\5,\u010e\n,\3,\3,\3,\7,\u0113\n,\f,\16")
        buf.write(",\u0116\13,\3,\3,\7,\u011a\n,\f,\16,\u011d\13,\3-\3-\3")
        buf.write("-\3-\3-\3-\3.\3.\3.\5.\u0128\n.\3.\5.\u012b\n.\3/\3/\3")
        buf.write("/\3\60\6\60\u0131\n\60\r\60\16\60\u0132\3\61\3\61\5\61")
        buf.write("\u0137\n\61\3\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3")
        buf.write("\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\7\64\u014a")
        buf.write("\n\64\f\64\16\64\u014d\13\64\5\u00bf\u00d4\u00e3\2\65")
        buf.write("\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31")
        buf.write("\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31")
        buf.write("\61\32\63\33\65\34\67\359\36;\37=\2? A!C\"E#G$I%K&M\'")
        buf.write("O(Q)S*U+W,Y-[\2]._/a\2c\2e\2g\60\3\2\b\5\2\13\f\17\17")
        buf.write("\"\"\4\2\f\f\17\17\4\2GGgg\4\2--//\4\2C\\c|\3\2\62;\2")
        buf.write("\u0159\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2")
        buf.write("\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2")
        buf.write("\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33")
        buf.write("\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2")
        buf.write("\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2")
        buf.write("\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2")
        buf.write("\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2?\3\2\2\2\2A\3\2")
        buf.write("\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3")
        buf.write("\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U")
        buf.write("\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2")
        buf.write("g\3\2\2\2\3i\3\2\2\2\5k\3\2\2\2\7m\3\2\2\2\to\3\2\2\2")
        buf.write("\13q\3\2\2\2\rs\3\2\2\2\17u\3\2\2\2\21w\3\2\2\2\23y\3")
        buf.write("\2\2\2\25{\3\2\2\2\27}\3\2\2\2\31\u0080\3\2\2\2\33\u0085")
        buf.write("\3\2\2\2\35\u0089\3\2\2\2\37\u008b\3\2\2\2!\u008d\3\2")
        buf.write("\2\2#\u0090\3\2\2\2%\u0093\3\2\2\2\'\u0096\3\2\2\2)\u009a")
        buf.write("\3\2\2\2+\u009f\3\2\2\2-\u00a1\3\2\2\2/\u00a3\3\2\2\2")
        buf.write("\61\u00aa\3\2\2\2\63\u00ac\3\2\2\2\65\u00b1\3\2\2\2\67")
        buf.write("\u00b8\3\2\2\29\u00c8\3\2\2\2;\u00ce\3\2\2\2=\u00db\3")
        buf.write("\2\2\2?\u00de\3\2\2\2A\u00e8\3\2\2\2C\u00ea\3\2\2\2E\u00ec")
        buf.write("\3\2\2\2G\u00ee\3\2\2\2I\u00f0\3\2\2\2K\u00f2\3\2\2\2")
        buf.write("M\u00f4\3\2\2\2O\u00f7\3\2\2\2Q\u00fa\3\2\2\2S\u00fd\3")
        buf.write("\2\2\2U\u0109\3\2\2\2W\u010d\3\2\2\2Y\u011e\3\2\2\2[\u0124")
        buf.write("\3\2\2\2]\u012c\3\2\2\2_\u0130\3\2\2\2a\u0134\3\2\2\2")
        buf.write("c\u013a\3\2\2\2e\u013c\3\2\2\2g\u013e\3\2\2\2ij\7B\2\2")
        buf.write("j\4\3\2\2\2kl\7\'\2\2l\6\3\2\2\2mn\7.\2\2n\b\3\2\2\2o")
        buf.write("p\7*\2\2p\n\3\2\2\2qr\7+\2\2r\f\3\2\2\2st\7}\2\2t\16\3")
        buf.write("\2\2\2uv\7\177\2\2v\20\3\2\2\2wx\7\60\2\2x\22\3\2\2\2")
        buf.write("yz\7]\2\2z\24\3\2\2\2{|\7_\2\2|\26\3\2\2\2}~\7k\2\2~\177")
        buf.write("\7h\2\2\177\30\3\2\2\2\u0080\u0081\7g\2\2\u0081\u0082")
        buf.write("\7n\2\2\u0082\u0083\7u\2\2\u0083\u0084\7g\2\2\u0084\32")
        buf.write("\3\2\2\2\u0085\u0086\7n\2\2\u0086\u0087\7g\2\2\u0087\u0088")
        buf.write("\7v\2\2\u0088\34\3\2\2\2\u0089\u008a\7?\2\2\u008a\36\3")
        buf.write("\2\2\2\u008b\u008c\7=\2\2\u008c \3\2\2\2\u008d\u008e\7")
        buf.write("=\2\2\u008e\u008f\7=\2\2\u008f\"\3\2\2\2\u0090\u0091\7")
        buf.write("h\2\2\u0091\u0092\7p\2\2\u0092$\3\2\2\2\u0093\u0094\7")
        buf.write("/\2\2\u0094\u0095\7@\2\2\u0095&\3\2\2\2\u0096\u0097\7")
        buf.write("f\2\2\u0097\u0098\7g\2\2\u0098\u0099\7h\2\2\u0099(\3\2")
        buf.write("\2\2\u009a\u009b\7v\2\2\u009b\u009c\7{\2\2\u009c\u009d")
        buf.write("\7r\2\2\u009d\u009e\7g\2\2\u009e*\3\2\2\2\u009f\u00a0")
        buf.write("\7~\2\2\u00a0,\3\2\2\2\u00a1\u00a2\7<\2\2\u00a2.\3\2\2")
        buf.write("\2\u00a3\u00a4\7V\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7")
        buf.write("p\2\2\u00a6\u00a7\7u\2\2\u00a7\u00a8\7q\2\2\u00a8\u00a9")
        buf.write("\7t\2\2\u00a9\60\3\2\2\2\u00aa\u00ab\7a\2\2\u00ab\62\3")
        buf.write("\2\2\2\u00ac\u00ad\7o\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af")
        buf.write("\7v\2\2\u00af\u00b0\7c\2\2\u00b0\64\3\2\2\2\u00b1\u00b2")
        buf.write("\7x\2\2\u00b2\u00b3\7\62\2\2\u00b3\u00b4\7\60\2\2\u00b4")
        buf.write("\u00b5\7\62\2\2\u00b5\u00b6\7\60\2\2\u00b6\u00b7\7\65")
        buf.write("\2\2\u00b7\66\3\2\2\2\u00b8\u00b9\7\61\2\2\u00b9\u00ba")
        buf.write("\7,\2\2\u00ba\u00bf\3\2\2\2\u00bb\u00be\5\67\34\2\u00bc")
        buf.write("\u00be\13\2\2\2\u00bd\u00bb\3\2\2\2\u00bd\u00bc\3\2\2")
        buf.write("\2\u00be\u00c1\3\2\2\2\u00bf\u00c0\3\2\2\2\u00bf\u00bd")
        buf.write("\3\2\2\2\u00c0\u00c2\3\2\2\2\u00c1\u00bf\3\2\2\2\u00c2")
        buf.write("\u00c3\7,\2\2\u00c3\u00c4\7\61\2\2\u00c4\u00c5\3\2\2\2")
        buf.write("\u00c5\u00c6\b\34\2\2\u00c68\3\2\2\2\u00c7\u00c9\t\2\2")
        buf.write("\2\u00c8\u00c7\3\2\2\2\u00c9\u00ca\3\2\2\2\u00ca\u00c8")
        buf.write("\3\2\2\2\u00ca\u00cb\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc")
        buf.write("\u00cd\b\35\2\2\u00cd:\3\2\2\2\u00ce\u00cf\7\61\2\2\u00cf")
        buf.write("\u00d0\7\61\2\2\u00d0\u00d4\3\2\2\2\u00d1\u00d3\13\2\2")
        buf.write("\2\u00d2\u00d1\3\2\2\2\u00d3\u00d6\3\2\2\2\u00d4\u00d5")
        buf.write("\3\2\2\2\u00d4\u00d2\3\2\2\2\u00d5\u00d7\3\2\2\2\u00d6")
        buf.write("\u00d4\3\2\2\2\u00d7\u00d8\7\f\2\2\u00d8\u00d9\3\2\2\2")
        buf.write("\u00d9\u00da\b\36\2\2\u00da<\3\2\2\2\u00db\u00dc\7^\2")
        buf.write("\2\u00dc\u00dd\7$\2\2\u00dd>\3\2\2\2\u00de\u00e3\7$\2")
        buf.write("\2\u00df\u00e2\5=\37\2\u00e0\u00e2\n\3\2\2\u00e1\u00df")
        buf.write("\3\2\2\2\u00e1\u00e0\3\2\2\2\u00e2\u00e5\3\2\2\2\u00e3")
        buf.write("\u00e4\3\2\2\2\u00e3\u00e1\3\2\2\2\u00e4\u00e6\3\2\2\2")
        buf.write("\u00e5\u00e3\3\2\2\2\u00e6\u00e7\7$\2\2\u00e7@\3\2\2\2")
        buf.write("\u00e8\u00e9\7,\2\2\u00e9B\3\2\2\2\u00ea\u00eb\7\61\2")
        buf.write("\2\u00ebD\3\2\2\2\u00ec\u00ed\7-\2\2\u00edF\3\2\2\2\u00ee")
        buf.write("\u00ef\7/\2\2\u00efH\3\2\2\2\u00f0\u00f1\7>\2\2\u00f1")
        buf.write("J\3\2\2\2\u00f2\u00f3\7@\2\2\u00f3L\3\2\2\2\u00f4\u00f5")
        buf.write("\7>\2\2\u00f5\u00f6\7?\2\2\u00f6N\3\2\2\2\u00f7\u00f8")
        buf.write("\7@\2\2\u00f8\u00f9\7?\2\2\u00f9P\3\2\2\2\u00fa\u00fb")
        buf.write("\7?\2\2\u00fb\u00fc\7?\2\2\u00fcR\3\2\2\2\u00fd\u00fe")
        buf.write("\7#\2\2\u00fe\u00ff\7?\2\2\u00ffT\3\2\2\2\u0100\u0101")
        buf.write("\7V\2\2\u0101\u0102\7t\2\2\u0102\u0103\7w\2\2\u0103\u010a")
        buf.write("\7g\2\2\u0104\u0105\7H\2\2\u0105\u0106\7c\2\2\u0106\u0107")
        buf.write("\7n\2\2\u0107\u0108\7u\2\2\u0108\u010a\7g\2\2\u0109\u0100")
        buf.write("\3\2\2\2\u0109\u0104\3\2\2\2\u010aV\3\2\2\2\u010b\u010e")
        buf.write("\7a\2\2\u010c\u010e\5c\62\2\u010d\u010b\3\2\2\2\u010d")
        buf.write("\u010c\3\2\2\2\u010e\u0114\3\2\2\2\u010f\u0113\7a\2\2")
        buf.write("\u0110\u0113\5c\62\2\u0111\u0113\5e\63\2\u0112\u010f\3")
        buf.write("\2\2\2\u0112\u0110\3\2\2\2\u0112\u0111\3\2\2\2\u0113\u0116")
        buf.write("\3\2\2\2\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115")
        buf.write("\u011b\3\2\2\2\u0116\u0114\3\2\2\2\u0117\u0118\7\60\2")
        buf.write("\2\u0118\u011a\5W,\2\u0119\u0117\3\2\2\2\u011a\u011d\3")
        buf.write("\2\2\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011cX")
        buf.write("\3\2\2\2\u011d\u011b\3\2\2\2\u011e\u011f\7k\2\2\u011f")
        buf.write("\u0120\7p\2\2\u0120\u0121\7v\2\2\u0121\u0122\78\2\2\u0122")
        buf.write("\u0123\7\66\2\2\u0123Z\3\2\2\2\u0124\u0127\5_\60\2\u0125")
        buf.write("\u0126\7\60\2\2\u0126\u0128\5_\60\2\u0127\u0125\3\2\2")
        buf.write("\2\u0127\u0128\3\2\2\2\u0128\u012a\3\2\2\2\u0129\u012b")
        buf.write("\5a\61\2\u012a\u0129\3\2\2\2\u012a\u012b\3\2\2\2\u012b")
        buf.write("\\\3\2\2\2\u012c\u012d\5[.\2\u012d\u012e\7h\2\2\u012e")
        buf.write("^\3\2\2\2\u012f\u0131\5e\63\2\u0130\u012f\3\2\2\2\u0131")
        buf.write("\u0132\3\2\2\2\u0132\u0130\3\2\2\2\u0132\u0133\3\2\2\2")
        buf.write("\u0133`\3\2\2\2\u0134\u0136\t\4\2\2\u0135\u0137\t\5\2")
        buf.write("\2\u0136\u0135\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0138")
        buf.write("\3\2\2\2\u0138\u0139\5_\60\2\u0139b\3\2\2\2\u013a\u013b")
        buf.write("\t\6\2\2\u013bd\3\2\2\2\u013c\u013d\t\7\2\2\u013df\3\2")
        buf.write("\2\2\u013e\u013f\7O\2\2\u013f\u0140\7G\2\2\u0140\u0141")
        buf.write("\7V\2\2\u0141\u0142\7C\2\2\u0142\u0143\7F\2\2\u0143\u0144")
        buf.write("\7C\2\2\u0144\u0145\7V\2\2\u0145\u0146\7C\2\2\u0146\u0147")
        buf.write("\7<\2\2\u0147\u014b\3\2\2\2\u0148\u014a\13\2\2\2\u0149")
        buf.write("\u0148\3\2\2\2\u014a\u014d\3\2\2\2\u014b\u0149\3\2\2\2")
        buf.write("\u014b\u014c\3\2\2\2\u014ch\3\2\2\2\u014d\u014b\3\2\2")
        buf.write("\2\23\2\u00bd\u00bf\u00ca\u00d4\u00e1\u00e3\u0109\u010d")
        buf.write("\u0112\u0114\u011b\u0127\u012a\u0132\u0136\u014b\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class RelayLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    SEMVER = 26
    COMMENT = 27
    WS = 28
    LINE_COMMENT = 29
    QUOTED_STRING = 30
    MUL = 31
    DIV = 32
    ADD = 33
    SUB = 34
    LT = 35
    GT = 36
    LE = 37
    GE = 38
    EQ = 39
    NE = 40
    BOOL_LIT = 41
    CNAME = 42
    DATATYPE = 43
    FLOAT = 44
    NAT = 45
    METADATA = 46

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'@'", "'%'", "','", "'('", "')'", "'{'", "'}'", "'.'", "'['", 
            "']'", "'if'", "'else'", "'let'", "'='", "';'", "';;'", "'fn'", 
            "'->'", "'def'", "'type'", "'|'", "':'", "'Tensor'", "'_'", 
            "'meta'", "'v0.0.3'", "'*'", "'/'", "'+'", "'-'", "'<'", "'>'", 
            "'<='", "'>='", "'=='", "'!='", "'int64'" ]

    symbolicNames = [ "<INVALID>",
            "SEMVER", "COMMENT", "WS", "LINE_COMMENT", "QUOTED_STRING", 
            "MUL", "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", "NE", 
            "BOOL_LIT", "CNAME", "DATATYPE", "FLOAT", "NAT", "METADATA" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "SEMVER", 
                  "COMMENT", "WS", "LINE_COMMENT", "ESCAPED_QUOTE", "QUOTED_STRING", 
                  "MUL", "DIV", "ADD", "SUB", "LT", "GT", "LE", "GE", "EQ", 
                  "NE", "BOOL_LIT", "CNAME", "DATATYPE", "PREFLOAT", "FLOAT", 
                  "NAT", "EXP", "LETTER", "DIGIT", "METADATA" ]

    grammarFileName = "Relay.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


