from typing import Union, Tuple, Dict, List
from relay.ir import GlobalId, OperatorId, Item, NodeBase, Span, FileId
from relay.ir import ShapeExtension, Operator, Defn

class Environment(NodeBase): ...

def Environment_add(self: Environment, func: GlobalId) -> None: ...
def Environment_global_id(self: Environment, name: str) -> GlobalId: ...
def Environment_operator_id(self: Environment, name: str) -> OperatorId: ...
def Environment_lookup_global(self: Environment, id: GlobalId) -> Item: ...
def Environment_lookup_operator(self: Environment, id: OperatorId) -> Item: ...
def Environment_remove_global(self: Environment, id: GlobalId) -> Item: ...
def Environment_add_source(self: Environment, file_name: str, source: str) -> FileId: ...
def Environment_report_error(self: Environment, message: str, span: Span) -> None: ...
def Environment_display_errors(self: Environment) -> None: ...
def Environment_register_shape_ext(self: Environment, shape_ext: ShapeExtension) -> None: ...
def Environment_get_operators(self: Environment) -> List[Operator]: ...
def Environment_get_defns(self: Environment) -> List[Defn]: ...
